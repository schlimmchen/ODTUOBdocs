{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#opendtu-onbattery","title":"OpenDTU-OnBattery","text":"<p>Upstream Project</p> <p>OpenDTU-OnBattery is a fork of OpenDTU by Thomas Basler (tbnobody).</p> <p>Upstream Documentation</p> <p>This documentation is not yet completely adjusted to OpenDTU-OnBattery. Feel free to help improving the documentation by proposing changes through pull requests.</p> <p>Open Source software to talk to Hoymiles solar inverters and battery peripherals. It is an alternative to Hoymiles Data Transfer Units (DTUs), which sync data into the s-Miles cloud.</p> <p>Note</p> <p>You can only use one DTU for a specific inverter. You cannot query an inverter with two DTUs. Mixing up multiple DTUs may lead to unexpected behavior!</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Dynamic Power Limiter to adjust one inverter's limit dynamically</li> <li>Power Meter interface to read the household power consumption</li> <li>Victron VE.Direct interface to communicate with Victron charge controllers</li> <li>Battery interface (JK BMS, Pylontech, Victron SmartShunt) to know a battery's state</li> <li>AC charger interface to control a Huawei AC charger</li> </ul>"},{"location":"#key-features-inherited-from-the-upstream-project","title":"Key Features inherited from the upstream project","text":"<ul> <li>Read live data from inverter</li> <li>Show inverters internal event log</li> <li>Show inverter information like firmware version, firmware build date, hardware revision and hardware version</li> <li>Show and set the current inverter limit</li> <li>Show the current grid profile settings</li> <li>Function to turn the inverter off and on</li> <li>Supports up to 10 inverters</li> <li>MQTT support (with TLS)</li> <li>Home Assistant MQTT Auto Discovery support</li> <li>Nice and fancy WebApp with visualization of current data</li> <li>Firmware upgrade using the web UI</li> <li>Time zone support</li> <li>Ethernet support</li> <li>Prometheus API endpoint (/api/prometheus/metrics)</li> <li>English, German and French (partially translated) web interface</li> <li>Displays (SSD1306, SH1106, PCD8544)</li> <li>Status LEDs</li> <li>Configuration management (export / import configurations)</li> <li>Dark Theme</li> </ul>"},{"location":"#features-for-developers","title":"Features for developers","text":"<ul> <li> <p>The microcontroller part</p> <ul> <li>Build with Arduino PlatformIO Framework for the ESP32</li> <li>Uses a fork of ESPAsyncWebserver and espMqttClient</li> </ul> </li> <li> <p>The WebApp part</p> <ul> <li>Build with Vue.js and Bootstrap</li> <li>Source is written in TypeScript</li> </ul> </li> </ul>"},{"location":"#background","title":"Background","text":"<p>The upstream project was started from a discussion on mikrocontroller.net. It's goal was to replace the original Hoymiles DTU (Telemetry Gateway), which uploads data to their cloud. With a lot of reverse engineering, the Hoymiles protocol was decrypted and analyzed.</p>"},{"location":"#support","title":"Support","text":"<p>For support using OpenDTU-OnBattery you can find us on Github or Discord:</p> <p> Github Discussions  Discord Chat</p>"},{"location":"#donate","title":"Donate","text":"<p>The firmware is open-source and free to use!</p> <p>If you like this project you can show your appreciation by making a small donation. This will help with offsetting the cost of hardware bought to develop and test features, or offsetting recurring costs like domain registrations.</p>"},{"location":"license/","title":"GNU General Public License","text":"<p>Version 2, June 1991 Copyright \u00a9 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>"},{"location":"license/#preamble","title":"Preamble","text":"<p>The licenses for most software are designed to take away your freedom to share and change it.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users.  This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it.  (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.)  You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.</p> <p>To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.</p> <p>We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.</p> <p>Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software.  If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.</p> <p>Finally, any free program is threatened constantly by software patents.  We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary.  To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"license/#terms-and-conditions-for-copying-distribution-and-modification","title":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","text":"<p>0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License.  The \u201cProgram\u201d, below, refers to any such program or work, and a \u201cwork based on the Program\u201d means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language.  (Hereinafter, translation is included without limitation in the term \u201cmodification\u201d.)  Each licensee is addressed as \u201cyou\u201d.</p> <p>Activities other than copying, distribution and modification are not covered by this License; they are outside its scope.  The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.</p> <p>1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.</p> <p>You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.</p> <p>2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:</p> <ul> <li>a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.</li> <li>b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.</li> <li>c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License.  (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)</li> </ul> <p>These requirements apply to the modified work as a whole.  If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works.  But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.</p> <p>Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.</p> <p>In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.</p> <p>3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:</p> <ul> <li>a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</li> <li>b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,</li> <li>c) Accompany it with the information you received as to the offer to distribute corresponding source code.  (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)</li> </ul> <p>The source code for a work means the preferred form of the work for making modifications to it.  For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable.  However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.</p> <p>If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.</p> <p>4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License.  Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.</p> <p>5. You are not required to accept this License, since you have not signed it.  However, nothing else grants you permission to modify or distribute the Program or its derivative works.  These actions are prohibited by law if you do not accept this License.  Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.</p> <p>6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions.  You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.</p> <p>7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all.  For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.</p> <p>If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.</p> <p>It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices.  Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.</p> <p>This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.</p> <p>8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded.  In such case, this License incorporates the limitation as if written in the body of this License.</p> <p>9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies a version number of this License which applies to it and \u201cany later version\u201d, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.</p> <p>10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission.  For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this.  Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.</p>"},{"location":"license/#no-warranty","title":"NO WARRANTY","text":"<p>11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <p>12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"license/#how-to-apply-these-terms-to-your-new-programs","title":"How to Apply These Terms to Your New Programs","text":"<p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If the program is interactive, make it output a short notice like this when it starts in an interactive mode:</p> <pre><code>Gnomovision version 69, Copyright (C) year name of author\nGnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n</code></pre> <p>The hypothetical commands <code>show w</code> and <code>show c</code> should show the appropriate parts of the General Public License.  Of course, the commands you use may be called something other than <code>show w</code> and <code>show c</code>; they could even be mouse-clicks or menu items--whatever suits your program.</p> <p>You should also get your employer (if you work as a programmer) or your school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary.  Here is a sample; alter the names:</p> <pre><code>Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n`Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n&lt;signature of Ty Coon&gt;, 1 April 1989\nTy Coon, President of Vice\n</code></pre> <p>This General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<ul> <li>First: When there is no light on the solar panels, the inverter completely turns off and does not answer to OpenDTU-OnBattery! So if you assembled your OpenDTU-OnBattery in the evening, wait until tomorrow.</li> <li>When there is no data received from the inverter(s) - try to reduce the distance between the OpenDTU-OnBattery and the inverter (e.g. move it to the window towards the roof). If the distance is already very small (less than 1 meter), try increasing the distance.</li> <li>At Settings --&gt; DTU you can increase the transmit power \"PA level\". Default is \"minimum\". If the distance to the inverter is small, try decreasing the transmit power.</li> <li>The NRF24L01+ needs relatively much current. With bad power supply (and especially bad cables!) a 10 \u00b5F capacitor soldered directly to the NRF24L01+ board connector brings more stability (pin 1+2 are the power supply). Note the polarity of the capacitor.</li> <li>You can try to use an USB power supply with 1 A or more instead of connecting the ESP32 to the computer.</li> <li>Try a different USB cable. Once again, a stable power source is important. Some USB cables are made of much plastic and very little copper inside.</li> <li>Double check that you have a radio module NRF24L01+ with a plus sign at the end. NRF24L01 module without the plus are not compatible with this project.</li> <li>There is no possibility of auto-discovering the inverters. Double check you have entered the serial numbers of the inverters correctly.</li> <li>OpenDTU-OnBattery needs access to a working NTP server to get the current date &amp; time.</li> <li>If your problem persists, check the  Issues on Github. Please inspect not only the open issues, also the closed issues contain useful information.</li> <li>Another source of information are the Discussions</li> <li>Make sure to connect one inverter only to one DTU (Original, Ahoy, OpenDTU, OpenDTU-OnBattery doesn't make a difference). If you query the same inverter from multiple DTUs you will mess up the communication.</li> </ul>"},{"location":"3rd_party/cases/","title":"Available cases","text":""},{"location":"3rd_party/cases/#opendtu-fusion","title":"OpenDTU Fusion","text":"<ul> <li>OpenDTU Fusion PCB + POE HAT</li> <li>OpenDTU Fusion PCB with 1,54\" OLED display</li> </ul>"},{"location":"3rd_party/cases/#esp32-s3","title":"ESP32-S3","text":"<ul> <li>ESP32-S3 DevKitC + NRF24</li> </ul>"},{"location":"3rd_party/cases/#esp32","title":"ESP32","text":"<p>Compatibility</p> <p>Beware that the cases below were originally designed for ESP32 boards with 4 MB of flash memory, which are not fully compatible with OpenDTU-OnBattery (lack of support for OTA updates). When using such a case, make sure that an upgraded ESP32(-S3) with at least 8 MB of flash storage fits the case as well.</p> <ul> <li>Open DTU box</li> <li>S\u00f3l: OpenDTU (ESP32 / NRF24L01+) case</li> <li>Complete solderless case for Olimex ESP32-POE-ISO</li> <li>DTU Case V1 complete solderless case for ESP32 and NRF24L01+ or EBYTE E01-ML01DP5</li> <li>Case for OpenDTU with integrated OLED Display</li> <li>OpenDTU PCB box for the wider board</li> <li>ESP32 Ahoy openDTU PCB housing</li> <li>Case for openDTU Ahoy Breakout Board (ESP32 and NRF24L01)</li> <li>Open-DTU CMT2300A with eByte Test-Board E49-900MBL-01 Case</li> </ul>"},{"location":"3rd_party/opendtu_fusion/","title":"OpenDTU Fusion","text":"<p>This board was developed by @markusdd and the help of the OpenDTU/Ahoy Discord community. It integrates all the components that are necessary to run OpenDTU-OnBattery on 5.5cm x 5.5cm, namely a ESP32-S3-WROOM-1U module, and the complete RF paths for NRF24 (HM series) and CMT2300A (HMS/HMT series) communications. So this PCB can interface with all supported inverters and uses the most modern ESP32-S3 chip.</p> <p>This board has always shipped with ESP32-S3 modules with at least 8 MB of flash storage, making this board compatible with the most recent versions of OpenDTU-OnBattery.</p>"},{"location":"3rd_party/opendtu_fusion/#opendtu-onbattery-add-on","title":"OpenDTU-OnBattery Add-On","text":"<p>The CAN/Iso shield is a generic add-on PCB that was specifically designed to allow connecting to OpenDTU-OnBattery peripherals such as VE.Direct devices and a Pylontech battery.</p>"},{"location":"3rd_party/opendtu_fusion/#firmware","title":"Firmware","text":"<p>Firmware builds for the <code>generic_esp32s3_usb</code> variant are available in OpenDTU-OnBattery's GitHub Release Page.</p> <p>OpenDTU-OnBattery also ships an OpenDTU Fusion-specific device profile (<code>pin_mapping.json</code>) in the code repository.</p>"},{"location":"3rd_party/opendtu_fusion/#board-documentation","title":"Board Documentation","text":"<p>The board specific documentation is available over at the OpenDTU Fusion documentation repository.</p>"},{"location":"3rd_party/opendtu_fusion/#how-to-obtain","title":"How to Obtain","text":"<p>For info on where to buy this board refer to the Where to get section.</p>"},{"location":"3rd_party/pcb/","title":"Available layouts for printed circuit boards","text":"<p>Compatibility</p> <p>Beware that these breakout PCBs were originally designed for ESP32 boards with 4 MB of flash memory, which are not fully compatible with OpenDTU-OnBattery. When using such a PCB, make sure that an upgraded ESP32(-S3) with at least 8 MB of flash storage fits the PCB as well.</p> <ul> <li>BreakoutBoard - sample printed circuit board for OpenDTU and Ahoy</li> <li>Board for OpenDTU with Display</li> <li>OpenDTU PCB mit Display</li> <li>PCB for OpenDTU in Cable Branchbox</li> <li>OpenDTU-BreakoutBoard &amp; Case for Wallmounting</li> </ul>"},{"location":"3rd_party/prometheus_database/","title":"Using Prometheus for data collection","text":"<p>The prometheus database is used for many projects for data collection. It is relatively easy to setup and use.</p> <p>For installation, you can follow a guide provided by the prometheus devs.</p> <p>Here are some distro-specific guides for linux:</p> <ul> <li>Debian/Ubuntu/Raspbian: See this guide here (Although there should also be something in the APT repos)</li> <li>Archlinux: Archlinux Wiki / Prometheus</li> </ul>"},{"location":"3rd_party/prometheus_database/#configuring-prometheus-to-scrape-data-from-the-opendtu","title":"Configuring Prometheus to scrape data from the OpenDTU","text":"<pre><code># /etc/prometheus/prometheus.yml\nscrape_configs:\n  - job_name: 'opendtu'\n    scrape_interval: 5s # &gt;= Inverter scrape interval\n    static_configs:\n    - targets: ['&lt;ip of first opendtu&gt;', '&lt;ip of second opendtu&gt;']\n    metrics_path: /api/prometheus/metrics\n</code></pre>"},{"location":"3rd_party/prometheus_database/#example-grafana-dashboards","title":"Example Grafana Dashboards","text":"<ul> <li>https://grafana.com/grafana/dashboards/19666-opendtu/</li> <li>https://github.com/tbnobody/OpenDTU/discussions/1230#discussioncomment-6969028</li> </ul>"},{"location":"3rd_party/related/","title":"Related Projects","text":"<ul> <li>OpenDTU (the upstream project)</li> <li>Ahoy</li> <li>DTU Simulator</li> <li>Dynamic Limit Management</li> <li>ioBroker.opendtu</li> <li>OpenDTU React Native</li> </ul>"},{"location":"firmware/","title":"Firmware Installation","text":""},{"location":"firmware/#download-firmware","title":"Download Firmware","text":"<p>The pre-compiled binary files can be found on the GitHub Releases Page (the right column on the projects start page). Currently there are pre-compiled binaries for ESP32 and ESP32-S3 MCUs.</p>"},{"location":"firmware/#factory-binaries","title":"Factory-Binaries","text":"<p>Important</p> <p>When flashing OpenDTU-OnBattery onto the ESP32 for the first time, you need to flash it with the factory firmware binary file.</p> <p>Binaries with <code>.factory</code> in their name include the firmware, the respective partition table, as well as the bootloader. Use these files to flash an ESP32 for the first time and after erasing the flash (to start from scratch).</p>"},{"location":"firmware/#overview-of-firmware-variants","title":"Overview of Firmware Variants","text":"<ul> <li>All binary names start with <code>opendtu-onbattery-</code> and include the respective   PlatformIO (PIO) environment name.</li> <li>Use the non-factory binaries to perform OTA updates.</li> </ul> PIO Environmenti MCU Flash Size Comment <code>generic_esp32s3_usb[.factory].bin</code> ESP32-S3 \u2265\u00a08\u00a0MB For OpenDTU Fusion and ESP32-S3 boards with native USB connection. <code>generic_esp32s3[.factory].bin</code> ESP32-S3 \u2265\u00a08\u00a0MB For boards that only have a USB-UART bridge to the ESP32-S3. <code>generic_esp32_8mb[.factory].bin</code> ESP32 \u2265\u00a08\u00a0MB For ESP32 with at least 8\u00a0MB of flash. <code>generic_esp32_4mb_no_ota.factory.bin</code> ESP32 4\u00a0MB For ESP32 with only 4\u00a0MB of flash, without support for OTA updates. <code>generic_esp32[.factory].bin</code> ESP32 4\u00a0MB End of Life, do not use for new devices. <code>generic[.factory].bin</code> ESP32 4\u00a0MB End of Life, previously deprecated, do not use for new devices. <p>Note</p> <p>All firmware variants require a Device Profile to be configured after installing the firmware.</p>"},{"location":"firmware/#write-firmware-to-esp32","title":"Write Firmware to ESP32","text":"<p>Follow the instructions to write ESP32 flash memory.</p>"},{"location":"firmware/battery_interface/","title":"Overview","text":"<p>Supported battery (management) systems (BMS) can be connected to OpenDTU-OnBattery. This allows to process battery metrics like its voltage or state of charge (SoC) by the Dynamic Power Limiter. The collected data is also published to the MQTT broker and it is presented in the web UI.</p> <p></p> <p>The following data providers (battery interfaces) are supported:</p> <ol> <li>Pylontech using CAN</li> <li>Pytes using CAN</li> <li>JK BMS using UART</li> <li>Victron SmartShunt using VE.Direct</li> <li>MQTT</li> </ol>"},{"location":"firmware/battery_interface/#mqtt","title":"MQTT","text":"<p>The MQTT battery provider is the most generic interface. Use it if your battery already publishes state of charge and/or voltage information to the MQTT broker. This option does not require to separately connect OpenDTU-OnBattery to your battery (managemen system), i.e., no setup of hardware is required to use this interface.</p> <p>Refer to the MQTT battery settings documentation for configuration options.</p>"},{"location":"firmware/compile_cli/","title":"Compile on CLI","text":""},{"location":"firmware/compile_cli/#step-by-step","title":"Step by Step","text":"<ol> <li>Install PlatformIO Core (PIO).</li> <li>Install the prerequisits to be able to build the    WebApp.</li> <li>Clone the source code repository.    You really have to clone the source code repository. Do not download and    extract a source ZIP file. During the build process the Git hash is embedded    into the firmware. If you merely download and extract the source ZIP file a    build error will occur, as no Git status can be determined.</li> <li>Adjust the serial port in file <code>platformio_override.ini</code> to your setup. The    setting occurs twice:<ul> <li><code>upload_port</code></li> <li><code>monitor_port</code></li> </ul> </li> <li>Build the firmware: <code>platformio run -e generic_esp32s3</code> (chose a suitable PIO environment)</li> <li>Upload to ESP32 module: <code>platformio run -e generic_esp32s3 -t upload</code></li> </ol>"},{"location":"firmware/compile_cli/#other-popular-platformio-tasks","title":"Other Popular PlatformIO Tasks","text":"<ul> <li>Clean the sources:  <code>platformio run -e generic_esp32s3 -t clean</code></li> <li>Erase flash: <code>platformio run -e generic_esp32s3 -t erase</code></li> </ul>"},{"location":"firmware/compile_vscode/","title":"Compile with Visual Studio Code","text":""},{"location":"firmware/compile_vscode/#step-by-step","title":"Step by Step","text":"<ol> <li>Download and install Git.</li> <li>Install the prerequisits to be able to build the    WebApp.</li> <li>Install Visual Studio Code (vscode).</li> <li>In vscode, install the PlatformIO    Extension.</li> <li>    Clone the source code repository. Select the <code>Source Control</code> tab on the    left, click <code>Clone Repository</code>, and enter the URL    <code>https://github.com/hoylabs/OpenDTU-OnBattery</code>. You really have to clone    the source code repository. Do not download and extract a source ZIP file.    During the build process the Git hash is embedded into the firmware. If you    merely download and extract the source ZIP file a build error will occur, as    no Git status can be determined.</li> <li>Adjust the upload and monitoring port to your system by clicking the plug    icon in vscode's bottom statusbar and selecting the respective serial port.    </li> <li>Unless you want to compile the default firmware variant, select the    appropriate PlatformIO environment in vscode's bottom statusbar.    </li> <li>Click the arrow button in vscode's bottom status bar (PlatformIO: Upload) to    compile and upload the firmware. During the compilation, all required    libraries are downloaded automatically.</li> </ol>"},{"location":"firmware/compile_vscode/#troubleshooting","title":"Troubleshooting","text":"<p>In Linux, if the upload fails with error messages \"Could not open /dev/ttyUSB0, the port doesn't exist\", you can check via <code>ls -la /dev/tty*</code> to which group your port belongs to, and then add your username to this group via <code>sudo adduser &lt;yourusername&gt; dialout</code> (if you are using <code>arch-linux</code> use: <code>sudo gpasswd -a &lt;yourusername&gt; uucp</code>; this method requires a logout/login of the affected user).</p>"},{"location":"firmware/compile_webapp/","title":"Working with the WebApp","text":""},{"location":"firmware/compile_webapp/#general-information","title":"General information","text":"<p>The WebApp works completly independent from the C/C++ firmware. When compiling the firmware, the pre-compiled WebApp will be embedded into the firmware <code>.bin</code> file. The WebApp is served to the browser by the embedded web server and then runs on the client side. The communication between the frontend and the ESP32 running OpenDTU-OnBattery is done using the Web API.</p> <p>The WebApp has to be (re-)compiled before building the firmware, as the WebApp compilation result is not versioned in Git. A PlatformIO pre-script makes sure that an up-to-date WebApp is available in your working directory right before attempting to build the firmware.</p> <p>There is a development server which hosts the frontend at your local computer and allows easy development. It will forward the requests to the backend automatically to your ESP32 (configurable IP address). That means you can develop the webinterface without flashing the ESP32 (if the WebAPI stays the same).</p>"},{"location":"firmware/compile_webapp/#install-prerequisits","title":"Install prerequisits","text":"<ul> <li>Determine the version of Node.js to be used: See the value for <code>node-version</code>   in the Github workflow, which is the canonical version to use.</li> <li>Install Node.js to be able to work with the WebApp.</li> <li>The <code>yarn</code> package manager is required to install Node.js packages and to   execute commands related to the WebApp. To make <code>yarn</code> available, you should   enable <code>corepack</code>, which is shipped together with Node.js. <code>corepack</code>   installs a shim to act as <code>yarn</code>, with the benefit of installing the one   version of <code>yarn</code> configured for this project.</li> </ul> Windows Debian/Ubuntu Linux  <ul> <li>Install Node.js using the prebuilt installer (use   the default settings during installation).</li> <li>Execute <code>corepack enable</code> in an elevated command prompt (run command   prompt as administrator).</li> </ul> <ul> <li>Install Node.js from nodesource.</li> <li>Execute <code>sudo corepack enable</code>.</li> </ul>"},{"location":"firmware/compile_webapp/#building-the-webapp","title":"Building the WebApp","text":"<p>The WebApp is build using <code>yarn</code>. First of all you have to install or update all the dependencies. Afterwards the app will be build. Start a Terminal of your choice and enter the following commands:</p> <pre><code>cd webapp\nyarn install\nyarn build\n</code></pre> <p>The generated WebApp will be placed in the <code>webapp_dist</code> directory from where it gets included by PlatformIO.</p>"},{"location":"firmware/compile_webapp/#starting-the-development-server","title":"Starting the Development Server","text":"<p>Create a file called <code>vite.user.ts</code> in the <code>webappp</code> directory with the following content:</p> <pre><code>export const proxy_target = '192.168.20.110'\n</code></pre> <p>Replace the IP with the IP of your ESP32 running OpenDTU-OnBattery.</p> <p>To start the development server execute the following command:</p> <pre><code>yarn dev\n</code></pre>"},{"location":"firmware/compile_webapp/#lint-with-eslint","title":"Lint with ESLint","text":"<pre><code>yarn lint\n</code></pre>"},{"location":"firmware/compile_webapp/#format-source-code","title":"Format Source Code","text":"<p>Automatically format the source code files to use a common format before committing changes.</p> <pre><code>yarn format\n</code></pre>"},{"location":"firmware/device_profiles/","title":"Device Profiles","text":"<p>Sample Profiles</p> <p>Ready-to-use device profiles can be found in the code repository.</p>"},{"location":"firmware/device_profiles/#summary","title":"Summary","text":"<p>Perform these steps to configure pin assignments for your board:</p> <ol> <li>Upload an appropriate device profile (JSON file).</li> <li>Afterwards, select a profile in the Web UI Device-Manager.</li> </ol>"},{"location":"firmware/device_profiles/#details","title":"Details","text":"<p>It is required to setup hardware settings like pin assignments or Ethernet support using a JSON file. This tells OpenDTU-OnBattery what peripherals are connected and how they are connected. The JSON file is uploaded using the configuration management (Settings --&gt; Config Management) in the web interface. Select \"Pin Mapping (pin_mapping.json)\" in the dropdown menu of the \"Restore\" section and choose the file to upload, then click the \"Restore\" button.</p> <p>After the file was uploaded, the ESP performs a reboot. This is required as the pin settings could have changed within the file and pin assignments are initialized when booting.</p> <p>To initially select or to change a device profile, navigate to Settings --&gt; Device-Manager and select the appropriate profile. When changing the device profile, the ESP reboots. You can see the current (Active) and the new (Selected) pin assignment in the table below the combobox.</p> <p>The JSON file can contain multiple profiles. Each profile requires a unique name and the respective parameters. If any parameter is not set, the default value <code>-1</code> (\"not in use\") will be effective. The default value may actually be something else if you compile the firmware yourself, in which case it is assumed that you know what you are doing.</p>"},{"location":"firmware/device_profiles/#structure-of-the-json-file","title":"Structure of the JSON file","text":"<p>GPIO Numbers</p> <p>Please be aware that the numerical values used in the device profile JSON file are ESP32 chip GPIO numbers (NOT physical pin numbers). Refer to the documentation of your respective ESP32 board to learn at what physical pin header a particular ESP32 GPIO is available.</p> <p>GPIO Numbering on different chips</p> <p>Some GPIO numbers available on one particular chip may be unavailable on another. Keep this in mind when upgrading, e.g., from an ESP32 to an ESP32-S3. Also, different boards may expose different GPIOs on their respective pin headers. Always check which GPIOs are actually available on your board before choosing which GPIOs to use.</p> <p>Examples</p> <p>These profiles are partially incomplete and merely serve as example snippets.</p> <pre><code>[\n    {\n        \"name\": \"Generic NodeMCU 38 pin with SSD1306 display\",\n        \"nrf24\": {\n            \"miso\": 19,\n            \"mosi\": 23,\n            \"clk\": 18,\n            \"irq\": 16,\n            \"en\": 4,\n            \"cs\": 5\n        },\n        \"victron\": {\n            \"rx\": 22,\n            \"tx\": -1\n        },\n        \"battery\": {\n            \"rx\": 27,\n            \"tx\": 14\n        },\n        \"huawei\": {\n            \"miso\": 12,\n            \"mosi\": 13,\n            \"clk\": 26,\n            \"irq\": 25,\n            \"power\": 33,\n            \"cs\": 15\n        },\n        \"display\": {\n            \"type\": 2,\n            \"data\": 21,\n            \"clk\": 22\n        },\n        \"eth\": {\n            \"enabled\": false,\n            \"phy_addr\": -1,\n            \"power\": -1,\n            \"mdc\": -1,\n            \"mdio\": -1,\n            \"type\": -1,\n            \"clk_mode\": -1\n        }\n    },\n    {\n        \"name\": \"Generic NodeMCU 38 pin with SSD1306\",\n        \"nrf24\": {\n            \"miso\": 19,\n            \"mosi\": 23,\n            \"clk\": 18,\n            \"irq\": 16,\n            \"en\": 4,\n            \"cs\": 5\n        },\n        \"eth\": {\n            \"enabled\": false,\n            \"phy_addr\": -1,\n            \"power\": -1,\n            \"mdc\": -1,\n            \"mdio\": -1,\n            \"type\": -1,\n            \"clk_mode\": -1\n        },\n        \"display\": {\n            \"type\": 2,\n            \"data\": 21,\n            \"clk\": 22\n        }\n    },\n    {\n        \"name\": \"Olimex ESP32-POE\",\n        \"nrf24\": {\n            \"miso\": 15,\n            \"mosi\": 2,\n            \"clk\": 14,\n            \"irq\": 13,\n            \"en\": 16,\n            \"cs\": 5\n        },\n        \"eth\": {\n            \"enabled\": true,\n            \"phy_addr\": 0,\n            \"power\": 12,\n            \"mdc\": 23,\n            \"mdio\": 18,\n            \"type\": 0,\n            \"clk_mode\": 3\n        }\n    },\n    {\n        \"name\": \"OpenDTU FUSION v2 + JK BMS on RS485 Transceiver\",\n        \"battery\": {\n            \"rx\": 16,\n            \"rxen\": 15,\n            \"tx\": 45,\n            \"txen\": 46\n        }\n    },\n    {\n        \"name\": \"OpenDTU FUSION v2 + 2xVictron MPPT + Victron SmartShunt\",\n        \"nrf24\": {\n            \"miso\": 48,\n            \"mosi\": 35,\n            \"clk\": 36,\n            \"irq\": 47,\n            \"en\": 38,\n            \"cs\": 37\n        },\n        \"cmt\": {\n            \"clk\": 6,\n            \"cs\": 4,\n            \"fcs\": 21,\n            \"sdio\": 5,\n            \"gpio2\": 3,\n            \"gpio3\": 8\n        },\n        \"led\": {\n            \"led0\": 17,\n            \"led1\": 18\n        },\n        \"battery\": {\n            \"rx\": 16,\n            \"tx\": -1\n        },\n        \"victron\": {\n            \"rx\": 22,\n            \"tx\": -1,\n            \"rx2\": 23,\n            \"tx2\": -1\n        }\n    }\n]\n</code></pre>"},{"location":"firmware/device_profiles/#implemented-configuration-values","title":"Implemented configuration values","text":"Parameter Data Type Description name string Unique name of the profile (max 63 characters) links array Must contain a object with the properties name and url. For each object a button is shown in the Device-Manager nrf24.miso number MISO Pin nrf24.mosi number MOSI Pin nrf24.clk number Clock Pin nrf24.irq number Interrupt Pin nrf24.en number Enable Pin nrf24.cs number Chip Select Pin cmt.sdio number SDIO Pin cmt.clk number CLK Pin cmt.cs number CS Pin cmt.fcs number FCS Pin cmt.gpio2 number GPIO2 Pin (optional) cmt.gpio3 number GPIO3 Pin (optional) eth.enabled boolean Enable/Disable the ethernet stack eth.phy_addr number Unique PHY addr eth.power number Power Pin (if available). Use -1 for not assigned pins. eth.mdc number Serial Management Interface MDC Pin. Use -1 for not assigned pins. eth.mdio number Serial Management Interface MDIO Pin. Use -1 for not assigned pins. eth.type number Possible values:<ul><li>0 = ETH_PHY_LAN8720</li><li>1 = ETH_PHY_TLK110</li><li>2 = ETH_PHY_RTL8201</li><li>3 = ETH_PHY_DP83848</li><li>4 = ETH_PHY_DM9051</li><li>5 = ETH_PHY_KSZ8041</li><li>6 = ETH_PHY_KSZ8081</li></ul> eth.clk_mode number Possible values:<ul><li>0 = ETH_CLOCK_GPIO0_IN</li><li>1 = ETH_CLOCK_GPIO0_OUT</li><li>2 = ETH_CLOCK_GPIO16_OUT</li><li>3 = ETH_CLOCK_GPIO17_OUT</li></ul> display.type number Specify type of display. Possible values:<ul><li>0 = None (default)</li><li>1 = PCD8544</li><li>2 = SSD1306</li><li>3 = SH1106</li><li>4 = SSD1309</li><li>5 = ST7567S GM12864-59N</li></ul> display.data number Data Pin (e.g. SDA for i2c displays) required for all displays. Use 255 for not assigned pins. display.clk number Clock Pin (e.g. SCL for i2c displays) required for SSD1306 and SH1106. Use 255 for not assigned pins. display.cs number Chip Select Pin required for PCD8544. Use 255 for not assigned pins. display.reset number Reset Pin required for PCD8544, optional for all other displays. Use 255 for not assigned pins. led.led0 number LED pin for network indication. <ul><li>Blinking = WLAN connected but NTP &amp; MQTT (if enabled) disconnected.</li><li>On = WLAN, NTP, MQTT connected.</li><li>Off = Network not connected</li></ul> led.led1 number LED pin for inverter indication. <ul><li>On = All inverters reachable &amp; producing.</li><li>Blinking = All inverters reachable but not producing.</li><li>Off = At least one inverter is not reachable.</li></ul> Only inverters with polling enabled are considered. victron.rx number Victron MPPT Charger VE.Direct receive pin victron.tx number Victron MPPT Charger VE.Direct transmit pin, can be set to -1 victron.rx2 number Second Victron MPPT Charger VE.Direct receive pin victron.tx2 number Second Victron MPPT Charger VE.Direct transmit pin, can be set to -1 victron.rx3 number Third Victron MPPT Charger VE.Direct receive pin victron.tx3 number Third Victron MPPT Charger VE.Direct transmit pin, can be set to -1 battery.rx number Pylontech battery CAN bus receive pin, JK BMS receive pin or Victron SmartShunt VE.Direct receive pin battery.tx number Pylontech battery CAN bus transmit pin, JK BMS transmit pin or Victron SmartShunt VE.Direct  transmit pin battery.rxen number JK BMS receive enable pin for RS485 transceiver mode battery.txen number JK BMS transmit enable pin for RS485 transceiver mode huawei.miso number MISO Pin for Huawei CAN bus interface huawei.mosi number MOSI Pin for Huawei CAN bus interface huawei.clk number CLK Pin for Huawei CAN bus interface huawei.cs number CS Pin for Huawei CAN bus interface huawei.irq number IRQ Pin for Huawei CAN bus interface huawei.power number Power Pin for Huawei power control (e.g. using slot detect) powermeter.rx number Serial power meter receive pin powermeter.tx number Serial power meter transmit pin (required for SDM, invalid for SML) powermeter.dere number Serial power meter \"driver/receiver enable\" pin (only for SDM, optional)"},{"location":"firmware/dpl/","title":"Introduction","text":"<p>The dynamic power limiter (DPL) is a software feature allowing automatic inverter power limit adjustments. Depending on the serup, the DPL will take the power meter (i.e. currently consumed power), the available solar power, and the battery charge state into account. The inverter is steered such that the currently consumed power (as provided by the power meter) reaches a user-defined value (usually zero). In particular, this allows to implement a zero export setup.</p> <p>Systems without battery</p> <p>The DPL also works in systems that do not have a battery, i.e., where the inverter is powered by solar panels directly. Configure the DPL accordingly. Battery-related features and settings do not apply for these setups.</p> <p>Systems without a power meter</p> <p>Setups without access to a power meter reading are supported. However, this implies that the inverter will never produce more than the configured base load.</p> <p>Refer to the documentation on DPL parameters to learn how to configure the DPL.</p>"},{"location":"firmware/dpl/#terminology-and-basics","title":"Terminology and Basics","text":"<p>Best Effort</p> <p>The DPL can be slow (&gt;10 seconds) to calculate and send a new power limit. With tuning, the limit updates can be as frequent as one or two seconds. There will always be a delay. The DPL cannot be expected to react in \"realtime\" similar to a commercial inline battery/inverter combination.</p>"},{"location":"firmware/dpl/#inverter","title":"Inverter","text":"<p>The DPL is currently capable of controlling a single inverter only.</p> <p>It is expected that the DPL is in exclusive control over the inverter. No other software and no human interaction shall trigger limit updates to be sent to the inverter.</p>"},{"location":"firmware/dpl/#battery-cycles","title":"Battery Cycles","text":"<p>Reboot State</p> <p>After a reboot the battery is assumed to be in a charge cycle unless the SoC or voltage is found to be above the respective start threshold.</p>"},{"location":"firmware/dpl/#charge-cycle","title":"Charge Cycle","text":"<p>A battery charge cycle is started when the battery SoC or voltage falls below the respective stop threshold. The charge cycle completes when the battery SoC or voltage reaches the respective start threshold.</p>"},{"location":"firmware/dpl/#discharge-cycle","title":"Discharge Cycle","text":"<p>The battery is or was charged to or beyond the start threshold. The discharge cycle ends when the battery SoC or voltage reaches the respective stop threshold.</p>"},{"location":"firmware/dpl/#voltage-measurements","title":"Voltage Measurements","text":"<p>If the DPL is configured such that voltage thresholds (rather than SoC thresholds) are effective, the voltage reading is taken from any of the following sources, in the given order:</p> <ol> <li>Battery interface</li> <li>Victron charge controller    battery output terminal</li> <li>Selected inverter input (configurable)</li> </ol> <p>If available, the battery interface voltage reading is preferred, as it is closest to the actual battery and therefore to be expected to be the most accurate. Without a battery interface and if available, the victron charge controller output voltage is preferred, as it also is often closer to the battery as well as more accurate. As a fallback, the inverter's input voltage reading is assumed as the battery voltage.</p>"},{"location":"firmware/dpl/#full-solar-passthrough","title":"(Full) Solar-Passthrough","text":"<p>If the currently available solar power is known, the DPL can make additional decisions on how to calculate the inverter limits. See the documentation on (Full) Solar-Passthrough.</p>"},{"location":"firmware/faq/","title":"Frequently Asked Questions","text":""},{"location":"firmware/faq/#basics","title":"Basics","text":"Is the DPL able to manage an inverter with mixed (battery and solar panel) power inputs <p>No. Setups where some inverter inputs are connected to solar panels and some inverter inputs are connected to a battery is not supported as the DPL is not designed to be able to calculate a reasonable limit for such an inverter.</p> After a firmware update some new features do not appear in the web interface <p>Make sure you reloaded the webinterface after the firmware update. This can be achieved, depending on your browser, by pressing either F5, Ctrl+F5 or just by clicking on the reload button.</p> After a firmware update with a self-compiled firmware, the web application is broken <p>Build the web application before building the firmware.</p> After a firmware update OpenDTU-OnBattery does not get a proper IP via DHCP <p>In some cases it is required to perform a power cycle to get it working again.</p> A set up inverter does not appear in the live view <p>Double check whether the inverter type in Settings --&gt; Inverter reflects your type or if it's unknown. If it's unknown it will not appear in the live view and you most likely inserted a invalid serial number.</p> Is it possible to reset the yield total value? <p>The yield total value comes directly out of the inverter. (Currently) there is no way to reset or change this value. Please consider it as the total kilometer counter in a car. On the other hand it's possible to add a yield offset to each inverter. This can be set up in the inverter properties (Settings --&gt; Inverters --&gt; Click on the pen icon)</p> Why get the daily yield values sometimes reset to zero at the evening? <p>The values are reset if the inverter restarts. At some (cloudy) evenings it can occur that the brightness fluctuates heavily during the dusk. This could lead to multiple restarts of the inverter and therefor zeros in the production values. You can enable the Yield Day Correction in the inverter settings.</p> OpenDTU-OnBattery shows wrong/unrealistic or just missing values <p>This is most likely the case because two DTUs are querying the same inverter. This is a not supported behavior and can lead to unexpected effects. Only one DTU is allowed to query a specific inverter.</p> <p>Please also see tbnobody#831, tbnobody#727.</p> With HMS-1800 or HMS-2000 the reactive power shows unrealistic value 6.553,5 <p>This seems to be a issue with inverter Firmware 1.0.14. It contains a calculation mistake.</p> <p>Reactive power seems to scale incorrectly / be calculated incorrectly and runs up with increasing power at sunrise from 0 to 0xFFFF and remains there, which can be observed at slow sunrise and sunset again (only in the very low watt range). Since the PF is calculated from P and Q and Q is insanely high, this results in a PF of almost 0.</p> <p>Please also see tbnobody#926.</p> After the OpenDTU-OnBattery startup the limit is stated as zero but the inverter seems to work properly <p>The limit is fetched every 2-4 minutes from the inverter. If it is fetch more often the inverter will create error messages in the event log. Due to the fact that on OpenDTU-OnBattery startup it is unknow when the limit was last queried, a 4-minute delay is applied before the limit will be fetched.</p>"},{"location":"firmware/faq/#debugging","title":"Debugging","text":"How to observe the ESP32 boot process by looking at the serial console? <p>Please see the serial console How-To.</p> The ESP does not boot anymore and the serial console shows 'Brownout detector was triggered' <p>This means that under certain circumstances (activation of WLAN/Ethernet or sending requests to the inverter) the supply voltage drops to such an extent that the ESP can no longer work reliably. This can be remedied, for example, with a 100uF capacitor between VCC and GND. In exceptional cases, the power supply unit also appears to be too weak. The cable cross-section of the USB cable can also have an influence.</p> After a reboot of the router or access point, OpenDTU-OnBattery does not reconnect immediatly to the Wi-Fi <p>OpenDTU-OnBattery tries to reconnect to the Wi-Fi for 30 seconds. If it can't find the Wi-Fi within this time it stops reconnecting and waits for 10 minutes until a new connect attempt is done. This is done because all channels are tried during a connection attempt. This means that an end device that is connected to the \"Admin Access Point\" may lose the connection or is not be able to connect at all.</p>"},{"location":"firmware/faq/#build-errors","title":"Build errors","text":"OpenDTU-OnBattery does not build: error: 'bad_alloc' was not declared in this scope <p>The exact reason is not known. But it helps to delete the <code>~/.platformio/</code> folder.</p> <p>Please also see tbnobody#719.</p> OpenDTU-OnBattery does not build: \"C:/Users/&lt;username&gt;/.platformio/packages/framework-arduinoespressif32/cores/esp32/Arduino.h:33:10: fatal error: freertos/FreeRTOS.h: No such file or directory #include \\\"freertos/FreeRTOS.h\\\" <p>This is most likly a issue with your PlatformIO installation. As a workaround you can delete all packages within the <code>C:/Users/&lt;username\\&gt;/.platformio/packages/</code> folder. The content will be downloaded on the next compile attempt.</p>"},{"location":"firmware/flash_esp/","title":"Flash ESP32","text":""},{"location":"firmware/flash_esp/#multiple-usb-ports","title":"Multiple USB-Ports","text":"<p>You board may be equipped with multiple USB ports. This is mostly the case for ESP32-S3 boards. One of the port connects to a USB-UART bridge on the board, while the other connects to the ESP32 natively using USB. The former port may be labeled \"UART\" or \"COM\" and the latter port may be labeled \"USB\". On some boards the labels are on the backside of the PCB.</p> <p>If you are still unsure which port is which, connect one after the other to your PC and observe whether one of it lists as \"CP2102\", \"CH340\", \"CH341\", \"CH342\", \"CH343\" or \"CH9102\". All of those are USB-UART bridges. The USB native port will list as \"(Espressif) USB JTAG/serial debug unit\" or similar.</p> <p>Native Connection</p> <p>Prefer connecting the board using the native USB connection to your PC. It is often faster to program using the native port and it should work reliably to restart the ESP32 into bootloader mode.</p>"},{"location":"firmware/flash_esp/#bootloader-mode","title":"Bootloader Mode","text":"<p>Before starting the flash process you may have to manually put the ESP into bootloader mode. Most boards can be restarted into bootloader mode by the flash utility automatically, but sometimes that is not working.</p> <ol> <li>Press and hold the <code>BOOT</code> button on your board. This effectively connects    the ESP32's <code>GPIO0</code> with <code>GND</code>. If your board has no <code>BOOT</code> button, connect    <code>GPIO0</code> to <code>GND</code> using a wire.</li> <li>Reset the ESP32 while holding the <code>BOOT</code> button.<ul> <li>Preferably, use your board's <code>RESET</code> (sometimes <code>RST</code>) button to perform   the reset. Press it once.</li> <li>Alternatively, perform a power-on reset: Disconnect the power supply and   make sure that the board is not powered from any other source. Reconnect   the power supply, possibly by plugging in the USB cable.</li> </ul> </li> <li>Release the <code>BOOT</code> button.</li> </ol>"},{"location":"firmware/flash_esp/#free-uart0","title":"Free UART0","text":"<p>You must disconnect a peripheral from UART0 to flash the ESP32, as UART0 is used to interact with the bootloader.</p> <p>Exception: An ESP32-S3 board is connected through the native USB port to the PC attempting to interact with the bootloader.</p>"},{"location":"firmware/flash_esp/#write-to-flash-memory","title":"Write to Flash Memory","text":"<p>The actual procedure to flash the ESP32 depends on the tool used. Click on the tab below that matches your flash tool.</p> Community Web Flasher Espressif Web Flasher esptool.py ESP Flash Tools ESP_Flasher  <p>OpenDTU-OnBattery Web Flasher</p> <p>The easiest, platform-independent method. Requires Chrome or Edge browser. Only installs firmware which has been released through Github.</p> <p>Espressif Web Flasher</p> <p>Platform-independent method. Requires Chrome or Edge browser. Allows to install arbitrary firmware binaries. Flash factory binaries to address <code>0x0</code> and non-factory binaries to address <code>0x10000</code>.</p> <p>Install esptool using <code>pip</code>:</p> <pre><code>python3 -m venv /path/to/your/venv\nsource /path/to/your/venv/bin/activate # on Linux\n/path/to/your/venv/bin/Activate.ps1 # on Windows\npip install esptool\nesptool version # should show esptool version\n</code></pre> <p>Use esptool to write a firmware binary to your ESP32:</p> <pre><code># erase flash only if you want or need to\n# start from scratch (settings are lost):\nesptool --port COM1 erase_flash\n\nesptool --baud 921600 --port COM1 --chip esp32 \\\n    --before default_reset --after hard_reset \\\n    write_flash 0x0 opendtu-generic*.factory.bin\n</code></pre> <ul> <li>Adjust the <code>--chip</code> parameter to the actual chip in use, e.g., <code>esp32-s3</code>.</li> <li>Change <code>COM1</code> to the correct port on your computer (On Linux:   <code>/dev/ttyUSB&lt;n&gt;</code> or <code>/dev/ttyACM&lt;n&gt;</code> where <code>&lt;n&gt;</code> is an integer. Use <code>sudo   dmesg --follow</code> while plugging in the device to know the port's name).</li> <li>In case you get an error at the end of the flash procedure, you can try   again using a lower baudrate, e.g., 460800.</li> </ul> <p>Espressif provides their own Flash Download Tools for Windows.</p> <p></p> <p>Change <code>COM9</code> to the correct port on your computer.</p> <ul> <li>On startup, select Chip Type --&gt; ESP32 and WorkMode -&gt; Develop</li> <li>Prepare all settings (see picture). Make sure to uncheck the DoNotChgBin option. Otherwise you may get errors like \"invalid header\".</li> <li>Only if you want or need to start from scratch (settings are lost): Press \"Erase\" button on screen. Look into the terminal window, you should see dots appear. On some boards, the automatic bootloader selection does not work. In this case you have to manually press the \"Boot\" button on the ESP32 board. Wait for \"FINISH\" to see if flashing/erasing is done.</li> <li>To program, press \"Start\" on screen, then the \"Boot\" button (if required).</li> <li>When flashing is complete (FINISH appears) then press the Reset button on the ESP32 board (or powercycle ) to start the OpenDTU-OnBattery application.</li> </ul> <p>Users report that ESP_Flasher is suitable for flashing OpenDTU-OnBattery on Windows.</p>"},{"location":"firmware/mqtt_topics/","title":"MQTT Topics","text":"<p>The base topic, as configured in the web GUI is prepended to all follwing topics.</p>"},{"location":"firmware/mqtt_topics/#general-topics","title":"General topics","text":"Topic R / W Description Value / Unit <code>dtu/ip</code> R IP address of OpenDTU-OnBattery IP address <code>dtu/hostname</code> R Current hostname of the dtu (as set in web GUI) <code>dtu/rssi</code> R Wi-Fi network quality db value <code>dtu/status</code> R Indicates whether OpenDTU-OnBattery network is reachable online /  offline <code>dtu/temperature</code> R Temperature of the ESP32 \u00b0C <code>dtu/uptime</code> R Time in seconds since startup seconds <code>dtu/heap/free</code> R Available heap Bytes <code>dtu/heap/size</code> R Total heap size Bytes <code>dtu/heap/minfree</code> R Lowest level of free heap since boot Bytes <code>dtu/heap/maxalloc</code> R Largest block of heap that can be allocated at once Bytes"},{"location":"firmware/mqtt_topics/#inverter-total-topics","title":"Inverter total topics","text":"<p>Enabled inverter means, that only inverters with \"Poll inverter data\" enabled are considered.</p> Topic R / W Description Value / Unit <code>ac/power</code> R Sum of AC active power of all enabled inverters W <code>ac/yieldtotal</code> R Sum of energy converted to AC since reset watt hours of all enabled inverters Kilo watt hours (kWh) <code>ac/yieldday</code> R Sum of energy converted to AC per day in watt hours of all enabled inverters Watt hours (Wh) <code>ac/is_valid</code> R Indicator whether all enabled inverters where reachable 0 or 1 <code>dc/power</code> R Sum of DC power of all enabled inverters Watt (W) <code>dc/irradiation</code> R Produced power of all enabled inverter stripes with defined irradiation settings divided by sum of all enabled inverters irradiation % <code>dc/is_valid</code> R Indicator whether all enabled inverters where reachable 0 or 1"},{"location":"firmware/mqtt_topics/#inverter-specific-topics","title":"Inverter specific topics","text":"<p>serial will be replaced with the serial number of the inverter.</p> Topic R / W Description Value / Unit <code>[serial]/name</code> R Name of the inverter as configured in web GUI <code>[serial]/device/bootloaderversion</code> R Bootloader version of the inverter <code>[serial]/device/fwbuildversion</code> R Firmware version of the inverter <code>[serial]/device/fwbuilddatetime</code> R Build date / time of inverter firmware <code>[serial]/device/hwpartnumber</code> R Hardware part number of the inverter <code>[serial]/device/hwversion</code> R Hardware version of the inverter <code>[serial]/status/reachable</code> R Indicates whether the inverter is reachable 0 or 1 <code>[serial]/status/producing</code> R Indicates whether the inverter is producing AC power 0 or 1 <code>[serial]/status/last_update</code> R Unix timestamp of last inverter statistics udpate seconds since JAN 01 1970 (UTC)"},{"location":"firmware/mqtt_topics/#ac-channel-global-specific-topics","title":"AC channel / global specific topics","text":"Topic R / W Description Value / Unit <code>[serial]/0/current</code> R AC current in ampere Ampere (A) <code>[serial]/0/efficiency</code> R Ratio AC Power over DC Power in percent % <code>[serial]/0/frequency</code> R AC frequency in hertz Hertz (Hz) <code>[serial]/0/power</code> R AC active power in watts Watt (W) <code>[serial]/0/powerdc</code> R DC power in watts Watt (W) <code>[serial]/0/powerfactor</code> R Power factor in percent % <code>[serial]/0/reactivepower</code> R AC reactive power in VAr VAr <code>[serial]/0/temperature</code> R Temperature of inverter in degree celsius Degree Celsius (\u00b0C) <code>[serial]/0/voltage</code> R AC voltage in volt Volt (V) <code>[serial]/0/yieldday</code> R Energy converted to AC per day in watt hours Watt hours (Wh) <code>[serial]/0/yieldtotal</code> R Energy converted to AC since reset watt hours Kilo watt hours (kWh)"},{"location":"firmware/mqtt_topics/#dc-input-channel-topics","title":"DC input channel topics","text":"<p>[1-4] represents the different inputs. The amount depends on the inverter model.</p> Topic R / W Description Value / Unit <code>[serial]/[1-4]/current</code> R DC current of specific input in ampere Ampere (A) <code>[serial]/[1-4]/name</code> R Name of the DC input channel as configured in web GUI <code>[serial]/[1-4]/irradiation</code> R Ratio DC Power over set maximum power (in web GUI) % <code>[serial]/[1-4]/power</code> R DC power of specific input in watt Watt (W) <code>[serial]/[1-4]/voltage</code> R DC voltage of specific input in volt Volt (V) <code>[serial]/[1-4]/yieldday</code> R Energy converted to AC per day on specific input Watt hours (Wh) <code>[serial]/[1-4]/yieldtotal</code> R Energy converted to AC since reset on specific input Kilo watt hours (kWh)"},{"location":"firmware/mqtt_topics/#inverter-limit-specific-topics","title":"Inverter limit specific topics","text":"<p>cmd topics are used to set values. Status topics are updated from values set in the inverter.</p> Topic R / W Description Value / Unit <code>[serial]/status/limit_relative</code> R Current applied production limit of the inverter % of total possible output <code>[serial]/status/limit_absolute</code> R Current applied production limit of the inverter Watt (W) <code>[serial]/cmd/limit_persistent_relative</code> W Set the inverter limit as a percentage of total production capability. The  value will survive the night without power. The updated value will show up in the web GUI and limit_relative topic immediatly. % <code>[serial]/cmd/limit_persistent_absolute</code> W Set the inverter limit as a absolute value. The  value will survive the night without power. The updated value will set immediatly within the inverter but show up in the web GUI and limit_relative topic after around 4 minutes. If you are using a already known inverter (known Hardware ID), the updated value will show up within a few seconds. Watt (W) <code>[serial]/cmd/limit_nonpersistent_relative</code> W Set the inverter limit as a percentage of total production capability. The  value will reset to the last persistent value at night without power. The updated value will show up in the web GUI and limit_relative topic immediatly. The value must be published non-retained, otherwise it will be ignored! % <code>[serial]/cmd/limit_nonpersistent_absolute</code> W Set the inverter limit as a absolute value. The  value will reset to the last persistent value at night without power. The updated value will set immediatly within the inverter but show up in the web GUI and limit_relative topic after around 4 minutes. If you are using a already known inverter (known Hardware ID), the updated value will show up within a few seconds. The value must be published non-retained, otherwise it will be ignored! Watt (W) <code>[serial]/cmd/power</code> W Turn the inverter on (1) or off (0) 0 or 1 <code>[serial]/cmd/restart</code> W Restarts the inverters (also resets YieldDay) 1"},{"location":"firmware/mqtt_topics/#victron-mppt-topics","title":"Victron MPPT topics","text":""},{"location":"firmware/mqtt_topics/#general","title":"General","text":"Topic R / W Description Value / Unit victron/[serial]/PID R Product description text victron/[serial]/SER R Serial number text victron/[serial]/FW R Firmware number int victron/[serial]/LOAD R Load output state ON /  OFF victron/[serial]/CS R State of operation text, e.g., \"Bulk\" victron/[serial]/ERR R Error code text, e.g., \"No error\" victron/[serial]/OR R Off reasen text, e.g., \"Not off\" victron/[serial]/MPPT R Tracker operation mode text, e.g., \"MPP Tracker active\" victron/[serial]/HSDS R Day sequence number (0...364) int in days"},{"location":"firmware/mqtt_topics/#battery-output","title":"Battery output","text":"Topic R / W Description Value / Unit victron/[serial]/V R Voltage Volt (V) victron/[serial]/I R Current Ampere (A)"},{"location":"firmware/mqtt_topics/#solar-input","title":"Solar input","text":"Topic R / W Description Value / Unit victron/[serial]/VPV R Voltage Volt (V) victron/[serial]/PPV R Power Watt (W) victron/[serial]/H19 R Yield total (user resettable counter) Kilo watt hours (kWh) victron/[serial]/H20 R Yield today Kilo watt hours (kWh) victron/[serial]/H21 R Maximum power today Watt (W) victron/[serial]/H22 R Yield yesterday Kilo watt hours (kWh) victron/[serial]/H23 R Maximum power yesterday Watt (W)"},{"location":"firmware/mqtt_topics/#pylontech-battery-topics","title":"(Pylontech) Battery topics","text":"<p>Incomplete</p> <p>In particular, topics specific to the JK BMS and Victron SmartShunt are not yet documented.</p> Topic R / W Description Value / Unit battery/settings/chargeVoltage R Voltage Volt (V) battery/settings/chargeCurrentLimitation R BMS requested max. charge current Ampere (A) battery/settings/dischargeCurrentLimitation R BMS requested max. discharge current Ampere (A) battery/stateOfCharge R State of Health % battery/stateOfHealth R State of Charge % battery/dataAge R How old the data is Seconds battery/voltage R Actual voltage Volt (V) battery/current R Actual current Ampere (A) battery/temperature R Actual temperature \u00b0C battery/alarm/overCurrentDischarge R Alarm: High discharge current 0 / 1 battery/alarm/underTemperature R Alarm: Low temperature 0 / 1 battery/alarm/overTemperature R Alarm: High temperature 0 / 1 battery/alarm/underVoltage R Alarm: Low voltage 0 / 1 battery/alarm/overVoltage R Alarm: High voltage 0 / 1 battery/alarm/bmsInternal R Alarm: BMS internal 0 / 1 battery/alarm/overCurrentCharge R battery/warning/highCurrentDischarge R Warning: High discharge current 0 / 1 battery/warning/lowTemperature R Warning: Low temperature 0 / 1 battery/warning/highTemperature R Warning: High temperature 0 / 1 battery/warning/lowVoltage R Warning: Low voltage 0 / 1 battery/warning/highVoltage R Warning: High voltage 0 / 1 battery/warning/bmsInternal R Warning: BMS internal 0 / 1 battery/manufacturer R Manufacturer String battery/charging/chargeEnabled R Charge enabled flag 0 / 1 battery/charging/dischargeEnabled R Discharge enabled flag 0 / 1 battery/charging/chargeImmediately R Charge immediately flag 0 / 1"},{"location":"firmware/mqtt_topics/#huawei-ac-charger-topics","title":"Huawei AC charger topics","text":"Topic R / W Description Value / Unit huawei/cmd/limit_online_voltage W Online voltage (i.e. CAN bus connected) Volt (V) huawei/cmd/limit_online_current W Online current (i.e. CAN bus connected) Ampere (A) huawei/cmd/limit_offline_voltage W Offline voltage (i.e. CAN bus not connected) Volt (V) huawei/cmd/limit_offline_current W Offline current (i.e. CAN bus not connected) Ampere (A) huawei/cmd/mode W Controls GPIO output pin to switch slot detect 0 (off) / 1 (on) / 2 (set automatically depending on online_current value) / 3 (set automatically based on Power Meter reading ) huawei/mode R Currently set charging mode see above huawei/data_age R How old the data is Seconds huawei/input_voltage R Input voltage Volt (V) huawei/input_current R Input current Ampere (A) huawei/input_power R Input power Watt (W) huawei/output_voltage R Output voltage Volt (V) huawei/output_current R Output current Ampere (A) huawei/max_output_current R Maximum output current (set using the online limit) Ampere (A) huawei/output_power R Output power Watt (W) huawei/input_temp R Input air temperature \u00b0C huawei/output_temp R Output air temperature \u00b0C huawei/efficiency R Efficiency Percentage"},{"location":"firmware/mqtt_topics/#power-limiter-topics","title":"Power Limiter topics","text":""},{"location":"firmware/mqtt_topics/#general_1","title":"General","text":"Topic R / W Description Value powerlimiter/status/upper_power_limit R get currently set maximum power limit of inverter Power [W] powerlimiter/cmd/upper_power_limit W set maximum power limit of inverter Power [W] powerlimiter/status/target_power_consumption R get currently set target grid consumption Power [W] powerlimiter/cmd/target_power_consumption W set target grid consumption Power [W]"},{"location":"firmware/mqtt_topics/#battery-thresholds","title":"Battery Thresholds","text":"<p>If the inverter is solar-powered, none of the thresholds are published and publishing to the respective <code>cmd</code> topic has no effect.</p> <p>Note that, depending on your settings, some of the thresholds might have no effect. Refer to the DPL documentation to understand the thresholds.</p> Topic Limitation powerlimiter/status/threshold/voltage/start powerlimiter/status/threshold/voltage/stop powerlimiter/status/threshold/voltage/full_solar_passthrough_start Not published if VE.Direct disabled powerlimiter/status/threshold/voltage/full_solar_passthrough_stop Not published if VE.Direct disabled powerlimiter/status/threshold/soc/start Not published if no battery interface configured or SoC is set to be ignored powerlimiter/status/threshold/soc/stop Not published if no battery interface configured or SoC is set to be ignored powerlimiter/status/threshold/soc/full_solar_passthrough Not published if no battery interface configured or SoC is set to be ignored or VE.Direct disabled <p>All thresholds have respective <code>cmd</code> topics (replace <code>status</code> with <code>cmd</code>), which allow to override the threshold. The overrides are persistent, i.e., new values are written to the persistent configuration file.</p> <p>Example: Use topic <code>powerlimiter/cmd/threshold/voltage/start</code> to override the battery discharge cycle start voltage threshold.</p>"},{"location":"firmware/mqtt_topics/#mode","title":"Mode","text":"Topic R / W Description Value powerlimiter/cmd/mode W Power Limiter operation mode see below powerlimiter/status/mode R Get Power Limiter operation mode see below <p>Setting any a mode through MQTT has no effect if the Power Limiter is disabled by configuration in the web application. The Power Limiter will stay off in that case.</p> <p>When using the web application to change DPL settings, the DPL mode will be reset to normal operation.</p> <p>Three modes are implemented:</p> <ul> <li>0 - Normal operation: The Power Limiter works as configured through the   web application.</li> <li>1 - Fully disable with inverter shut down: The inverter is shut down and   afterwards the Power Limiter stops operating, as if it was disabled in the   web application. Note that this means that the inverter can start producing   power if the web application or an MQTT topic is used to control it.</li> <li>2 - Unconditional Full Solar-Passthrough: The power limit is set such   that all available solar power is fed into the home, irrespective of grid   consumption. Essentially, the inverter mimics the behavior of a traditional,   non-smart inverter. Depending on your configuration, the inverter's limit is   set to the following:<ol> <li>Inverter is powered by a battery: The inverter's limit is set to the    solar power output (VE.Direct interface), adjusted for efficiency, such    that no energy from the battery is consumed. Note that if VE.Direct is    disabled or the data is outdated, the inverter is shut down instead. This    mode can be particularly useful in scenarios where solar power is better    stored elsewhere, such as in an electric car.</li> <li>Inverter is powered by solar modules: The inverter's limit is set to    the upper limit configured in the DPL settings (starting from release    2024.05.03).</li> </ol> </li> </ul>"},{"location":"firmware/mqtt_topics/#timeout-counter","title":"Timeout Counter","text":"<p>Availability</p> <p>Starting from release 2024.05.03.</p> <p>The DPL counts the amount of times an attempt to configure the inverter to a particular state times out. This counter is used to decide to sent an inverter restart command, hoping to \"revive\" the inverter. If the counter keeps increasing even after multiple restart commands have been issued, the ESP restarts as a last resort. The thresholds to perform these actions are hard coded to 10 and 20 timeouts, respectively.</p> <p>Topic <code>powerlimiter/status/inverter_update_timeouts</code> can be monitored to be alerted by these timeouts.</p>"},{"location":"firmware/solar_passthrough/","title":"(Full) Solar-Passthrough","text":""},{"location":"firmware/solar_passthrough/#solar-passthrough","title":"Solar-Passthrough","text":"<p>Solar-Passthrough is a feature that, if enabled, makes the DPL calculate an inverter limit such that the available solar power is first used to cover the needs of the household. This effectively prevents the energy from being stored in the battery just so it can be discharged later. If there is any surplus solar power left, it will be used to charge the battery.</p> <p>Refer to the DPL documentation to understand what is considired a battery charge and discharge cycle.</p>"},{"location":"firmware/solar_passthrough/#solar-passthrough-is-off","title":"Solar-Passthrough is OFF","text":"<ul> <li>The inverter is disabled during a battery charge cycle.</li> <li>All solar power will be used to charge the battery.</li> <li>The inverter is enabled during a battery discharge cycle.<ul> <li>The inverter will use as much power as is needed to compensate the   household consumption.</li> <li>Depending on the current consumption and the available solar power, the   battery is drained.</li> </ul> </li> </ul>"},{"location":"firmware/solar_passthrough/#solar-passthrough-is-on","title":"Solar-Passthrough is ON","text":"<p>As with Solar-Passthrough OFF, in general the inverter is disabled during a battery charge cycle, and it is enabled during a battery discharge cycle.</p> <p>With Solar-Passthrough ON, there is an important difference while the battery is in a charge cycle:</p> <ul> <li>If there is solar power available (Victron MPPT is producing power), it will   be used to cover the household consumption.<ul> <li>The inverter is thus enabled and producing power even though the battery is   in a charge cycle.</li> <li>The inverter power limit is constrained to the solar power. Therefore,   discharging of the battery is avoided.</li> </ul> </li> <li>Surplus solar power (available when solar output is greater than the   household consumption) still charges the battery.</li> </ul>"},{"location":"firmware/solar_passthrough/#full-solar-passthrough_1","title":"Full Solar-Passthrough","text":"<p>There is an additional battery SoC/voltage threshold activating Full Solar-Passthrough.</p> <p>While the battery reached or is above the Full Solar-Passthrough threshold, the inverter's limit is set to match the total solar power output (regardless of the power meter value). This threshold is usually configured such that Full Solar-Passthrough activates when the battery is considered fully charged. Surplus solar power is then fed into the grid.</p> <p>Limitation</p> <p>If the solar output power is greater than the inverter can feed into the grid, the charge controller will eventually switch to absorbtion and then float mode. This reduces the charge controller's power output, and the inverter follows the new output power, and the production of AC power seizes.</p>"},{"location":"firmware/update/","title":"Firmware Update","text":""},{"location":"firmware/update/#firmware-variant","title":"Firmware Variant","text":"<p>You can find your currently installed firmware variant in Info --&gt; System --&gt; PIO Environment.</p>"},{"location":"firmware/update/#over-the-air-ota","title":"Over-The-Air (OTA)","text":"<p>Factory Images</p> <p>Do NOT use a factory firmware image to perform an OTA update. The device will not boot after writing a factory firmware image using OTA.</p> <p>Once OpenDTU-OnBattery is running and connected to Wi-Fi, you can do further updates using the web interface. Navigate to Settings --&gt; Firmware upgrade and press the browse button. Select an appropriate firmware file from your local computer.</p> <p></p> <p>If you've installed a pre-compiled firmware in the past (a firmware file which contains <code>opendtu-onbattery-generic*.factory.bin</code> in its filename), choose the respective binary without the suffix <code>.factory</code> when performing an OTA update.</p> <p>If you have compiled the firmware by yourself, you'll find the firmware file (after a successful build process) under <code>.pio/build/&lt;environment&gt;/firmware.bin</code>, where <code>&lt;environment&gt;</code> is your chosen PlatformIO environment, e.g., <code>generic_esp32s3</code>.</p> <p>After a successful upload, OpenDTU-OnBattery immediately restarts using the new firmware.</p> <p>Important hint</p> <p>Make sure you reload the web interface after the update. Otherwise you will not see new settings and features. Normally it should be sufficient to reload the page with F5 or by clicking on \"Refresh\". In some cases it may also be necessary to clear the browser cache. This can be done with the key combination Ctrl+F5, for example.</p>"},{"location":"firmware/update/#serial-update","title":"Serial Update","text":""},{"location":"firmware/update/#using-vscode","title":"Using VSCode","text":"<p>If you've uploaded the firmware in the past using VSCode you can just follow the compiling guide to upload it again. All settings are preserved.</p>"},{"location":"firmware/update/#using-flash-tool","title":"Using flash tool","text":"<p>Flash the appropriate factory firmware image (the binary with <code>.factory</code> in its name) to address <code>0x0</code> using <code>esptool.py</code> or a similar tool, see description of writing to ESP32 flash.</p>"},{"location":"firmware/web_api/","title":"Web API","text":"<p>Information in JSON format can be obtained through the web API.</p> <p>Important Note</p> <p>The WebAPI is mainly generated to fetch and post information between the WebUI and the ESP. You use it at your own  risk. It may change in future and break compatibility!</p>"},{"location":"firmware/web_api/#list-of-urls","title":"List of URLs","text":"<p>Incomplete</p> <p>This list is definitely incomplete. The OpenDTU-OnBattery-specific endpoints are not yet documented (the one in this list are inherited from the upstream project's documentation).</p> GET/POST Auth required URL Get yes /api/config/get Post yes /api/config/delete Get yes /api/config/list Post yes /api/config/upload Get+Post yes /api/device/config Get no /api/devinfo/status Get+Post yes /api/dtu/config Get no /api/eventlog/status?inv=inverter-serialnumber Post yes /api/firmware/update Get yes /api/inverter/list Post yes /api/inverter/add Post yes /api/inverter/del Post yes /api/inverter/edit Post yes /api/limit/config Get no /api/limit/status Get no /api/livedata/status?inv=inverter-serialnumber Get no /api/livedata/status Post yes /api/maintenance/reboot Get+Post yes /api/mqtt/config Get no /api/mqtt/status Get+Post yes /api/network/config Get no /api/network/status Get+Post yes /api/ntp/config Get no /api/ntp/status Get+Post yes /api/ntp/time Get no /api/power/status Post yes /api/power/config Get no /api/prometheus/metrics Get+Post yes /api/security/config Get yes /api/security/authenticate Get no /api/system/status"},{"location":"firmware/web_api/#examples-of-use","title":"Examples of Use","text":""},{"location":"firmware/web_api/#important-notes","title":"Important notes","text":"<ul> <li>IP addresses and serial numbers in this examples are anonymized. Adjust to your own needs.</li> <li>The output from curl is without a linefeed at the end, so please be careful when copying the output - do not accidentally add the shell prompt directly after it.</li> <li>When POSTing config data to OpenDTU-OnBattery, always send all settings back, even if only one setting was changed. Sending single settings is not supported and you will receive a response <code>{\"type\":\"warning\",\"message\":\"Values are missing!\"}</code></li> <li>When POSTing, always put single quotes around the data part. Do not confuse the single quote <code>'</code> with the backtick <code>`</code>. You have been warned.</li> <li>Some API calls have a single URL for GET and POST - e.g. <code>/api/ntp/config</code></li> <li>Other API calls use e.g. <code>/api/limit/status</code> to GET data and a different URL <code>/api/limit/config</code> to POST data.</li> <li>If you want to investigate the web api communication, a good tool is Postman</li> <li>Settings API require username and password provided with Basic Authentication credentials</li> <li>If you disable the readonly access to the web API, every endpoint requires authentication</li> </ul>"},{"location":"firmware/web_api/#get-information","title":"Get information","text":"<p>You can \"talk\" to OpenDTU-OnBattery with a command line tool like <code>curl</code>. The output is in plain JSON, without carriage return/linefeed and is therefore not very human readable.</p>"},{"location":"firmware/web_api/#get-common-live-data","title":"Get common live data","text":"<pre><code>$ curl http://192.168.10.10/api/livedata/status\n{\"inverters\":[{\"serial\":\"1161716xxxxx\",\"name\":\"Meine Solaranlage\",\"order\":0,\"data_age\":30636,\"poll_enabled\":true,\"reachable\":false,\"producing\":false,\"limit_relative\":100,\"limit_absolute\":1500},{\"serial\":\"1141716xxxxx\",\"name\":\"Inverter 2\",\"order\":0,\"data_age\":108349,\"poll_enabled\":false,\"reachable\":false,\"producing\":false,\"limit_relative\":0,\"limit_absolute\":-1},{\"serial\":\"1141716xxxxx\",\"name\":\"Inverter 3\",\"order\":0,\"data_age\":108349,\"poll_enabled\":false,\"reachable\":false,\"producing\":false,\"limit_relative\":0,\"limit_absolute\":-1}],\"total\":{\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":2515.605957,\"u\":\"kWh\",\"d\":3}},\"hints\":{\"time_sync\":false,\"radio_problem\":false,\"default_password\":false}}\n</code></pre> <p>To enhance readability (and filter information) use the JSON command line processor <code>jq</code>.</p> <pre><code>$ curl --no-progress-meter http://192.168.10.10/api/livedata/status | jq\n{\n  \"inverters\": [\n    {\n      \"serial\": \"1161716xxxxx\",\n      \"name\": \"Meine Solaranlage\",\n      \"order\": 0,\n      \"data_age\": 30687,\n      \"poll_enabled\": true,\n      \"reachable\": false,\n      \"producing\": false,\n      \"limit_relative\": 100,\n      \"limit_absolute\": 1500\n    },\n    {\n      \"serial\": \"1141716xxxxx\",\n      \"name\": \"Inverter 2\",\n      \"order\": 0,\n      \"data_age\": 108400,\n      \"poll_enabled\": false,\n      \"reachable\": false,\n      \"producing\": false,\n      \"limit_relative\": 0,\n      \"limit_absolute\": -1\n    },\n    {\n      \"serial\": \"1141716xxxxx\",\n      \"name\": \"Inverter 3\",\n      \"order\": 0,\n      \"data_age\": 108400,\n      \"poll_enabled\": false,\n      \"reachable\": false,\n      \"producing\": false,\n      \"limit_relative\": 0,\n      \"limit_absolute\": -1\n    }\n  ],\n  \"total\": {\n    \"Power\": {\n      \"v\": 0,\n      \"u\": \"W\",\n      \"d\": 1\n    },\n    \"YieldDay\": {\n      \"v\": 0,\n      \"u\": \"Wh\",\n      \"d\": 0\n    },\n    \"YieldTotal\": {\n      \"v\": 2515.605957,\n      \"u\": \"kWh\",\n      \"d\": 3\n    }\n  },\n  \"hints\": {\n    \"time_sync\": false,\n    \"radio_problem\": false,\n    \"default_password\": false\n  }\n}\n</code></pre>"},{"location":"firmware/web_api/#get-inverter-detail-livedata","title":"Get inverter detail livedata","text":"<pre><code>$ curl http://192.168.10.10/api/livedata/status?inv=1161716xxxxx\n{\"inverters\":[{\"serial\":\"1161716xxxxx\",\"name\":\"Meine Solaranlage\",\"order\":0,\"data_age\":30824,\"poll_enabled\":true,\"reachable\":false,\"producing\":false,\"limit_relative\":100,\"limit_absolute\":1500,\"AC\":{\"0\":{\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"Voltage\":{\"v\":0,\"u\":\"V\",\"d\":1},\"Current\":{\"v\":0,\"u\":\"A\",\"d\":2},\"Frequency\":{\"v\":0,\"u\":\"Hz\",\"d\":2},\"PowerFactor\":{\"v\":0,\"u\":\"\",\"d\":3},\"ReactivePower\":{\"v\":0,\"u\":\"var\",\"d\":1}}},\"DC\":{\"0\":{\"name\":{\"u\":\"\"},\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"Voltage\":{\"v\":0,\"u\":\"V\",\"d\":1},\"Current\":{\"v\":0,\"u\":\"A\",\"d\":2},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":834.2609863,\"u\":\"kWh\",\"d\":3},\"Irradiation\":{\"v\":0,\"u\":\"%\",\"d\":3,\"max\":385}},\"1\":{\"name\":{\"u\":\"\"},\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"Voltage\":{\"v\":0,\"u\":\"V\",\"d\":1},\"Current\":{\"v\":0,\"u\":\"A\",\"d\":2},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":832.7069702,\"u\":\"kWh\",\"d\":3},\"Irradiation\":{\"v\":0,\"u\":\"%\",\"d\":3,\"max\":385}},\"2\":{\"name\":{\"u\":\"\"},\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"Voltage\":{\"v\":0,\"u\":\"V\",\"d\":1},\"Current\":{\"v\":0,\"u\":\"A\",\"d\":2},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":843.7299805,\"u\":\"kWh\",\"d\":3},\"Irradiation\":{\"v\":0,\"u\":\"%\",\"d\":3,\"max\":385}},\"3\":{\"name\":{\"u\":\"\"},\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"Voltage\":{\"v\":0,\"u\":\"V\",\"d\":1},\"Current\":{\"v\":0,\"u\":\"A\",\"d\":2},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":4.907999992,\"u\":\"kWh\",\"d\":3}}},\"INV\":{\"0\":{\"Power DC\":{\"v\":0,\"u\":\"W\",\"d\":1},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":2515.605957,\"u\":\"kWh\",\"d\":3},\"Temperature\":{\"v\":0,\"u\":\"\u00b0C\",\"d\":1},\"Efficiency\":{\"v\":0,\"u\":\"%\",\"d\":3}}},\"events\":2}],\"total\":{\"Power\":{\"v\":0,\"u\":\"W\",\"d\":1},\"YieldDay\":{\"v\":0,\"u\":\"Wh\",\"d\":0},\"YieldTotal\":{\"v\":2515.605957,\"u\":\"kWh\",\"d\":3}},\"hints\":{\"time_sync\":false,\"radio_problem\":false,\"default_password\":false}}\n</code></pre> <p>The eventlog can be fetched with the inverter serial number as parameter:</p> <pre><code>$ curl --no-progress-meter http://192.168.10.10/api/eventlog/status?inv=11418186xxxx | jq\n{\n  \"11418186xxxx\": {\n    \"count\": 4,\n    \"events\": [\n      {\n        \"message_id\": 1,\n        \"message\": \"Inverter start\",\n        \"start_time\": 28028,\n        \"end_time\": 28028\n      },\n      {\n        \"message_id\": 209,\n        \"message\": \"PV-1: No input\",\n        \"start_time\": 28036,\n        \"end_time\": 0\n      },\n      {\n        \"message_id\": 2,\n        \"message\": \"DTU command failed\",\n        \"start_time\": 28092,\n        \"end_time\": 28092\n      },\n      {\n        \"message_id\": 207,\n        \"message\": \"MPPT-A: Input undervoltage\",\n        \"start_time\": 28336,\n        \"end_time\": 0\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"firmware/web_api/#combine-curl-and-jq","title":"combine curl and jq","text":"<p><code>jq</code> can filter specific fields from json output.</p> <p>For example, filter out the current total power:</p> <pre><code>$ curl --no-progress-meter http://192.168.10.10/api/livedata/status | jq '.total | .Power.v'\n140.7999878\n</code></pre>"},{"location":"firmware/web_api/#get-information-where-login-is-required","title":"Get information where login is required","text":"<p>When config data is requested, username and password have to be provided to <code>curl</code> Username is always <code>admin</code>, the default password is <code>openDTU42</code>. The password is used for both the admin login and the Admin-mode Access Point.</p> <pre><code>$ curl --u admin:openDTU42 http://192.168.10.10/api/ntp/config\n{\"ntp_server\":\"pool.ntp.org\",\"ntp_timezone\":\"CET-1CEST,M3.5.0,M10.5.0/3\",\"ntp_timezone_descr\":\"Europe/Berlin\"}\n</code></pre>"},{"location":"firmware/web_api/#post-information","title":"Post information","text":"<p>With HTTP POST commands information can be written to the OpenDTU-OnBattery.</p> <p>The Web API is designed to allow the web frontend in the web browser to communicate with the OpenDTU-OnBattery software running on the ESP32. It is not designed to be intuitive or user-friendly, so please follow the instructions here.</p>"},{"location":"firmware/web_api/#example-1-change-ntp-settings","title":"Example 1: change ntp settings","text":"<p>If you want to configure the ntp server setting, first fetch the information from the web API:</p> <pre><code>$ curl -u \"admin:password\" http://192.168.10.10/api/ntp/config\n{\"ntp_server\":\"pool.ntp.org\",\"ntp_timezone\":\"CET-1CEST,M3.5.0,M10.5.0/3\",\"ntp_timezone_descr\":\"Europe/Berlin\"}\n</code></pre> <p>Then, second step, send your new settings. Use the text output from curl in the first step, add <code>data=</code> and enclose the whole data with single quotes.</p> <pre><code>$ curl -u \"admin:password\" http://192.168.10.10/api/ntp/config -d 'data={\"ntp_server\":\"my.own.ntp.server.home\",\"ntp_timezone\":\"CET-1CEST,M3.5.0,M10.5.0/3\",\"ntp_timezone_descr\":\"Europe/Berlin\"}'\n{\"type\":\"success\",\"message\":\"Settings saved!\"}\n</code></pre> <p>You will receive a json formatted response.</p>"},{"location":"firmware/web_api/#example-2-change-power-limit","title":"Example 2: change power limit","text":"<p>In the second example, I want to change the non persistent power limit of an inverter. Again, first fetch current data:</p> <pre><code>$ curl http://192.168.10.10/api/limit/status\n{\"11418186xxxx\":{\"limit_relative\":100,\"max_power\":600,\"limit_set_status\":\"Ok\"},\"11418180xxxx\":{\"limit_relative\":100,\"max_power\":800,\"limit_set_status\":\"Ok\"}}\n</code></pre> <p>I see data from two configured inverters.</p> <p>Now I set the relative power limit of inverter with serialnumber <code>11418180xxxx</code> to 50%.</p> <pre><code>$ curl -u \"admin:password\" http://192.168.10.10/api/limit/config -d 'data={\"serial\":\"11418180xxxx\", \"limit_type\":1, \"limit_value\":50}'\n{\"type\":\"success\",\"message\":\"Settings saved!\"}\n</code></pre> <p>Then I read again the limit status. In the first answer the status is <code>pending</code>, some seconds later it changed to <code>OK</code>.</p> <pre><code>$ curl http://192.168.10.10/api/limit/status\n{\"11418186xxxx\":{\"limit_relative\":100,\"max_power\":600,\"limit_set_status\":\"Ok\"},\"11418180xxxx\":{\"limit_relative\":100,\"max_power\":800,\"limit_set_status\":\"Pending\"}}\n\n...\n\n$ curl http://192.168.10.10/api/limit/status\n{\"11418186xxxx\":{\"limit_relative\":100,\"max_power\":600,\"limit_set_status\":\"Ok\"},\"11418180xxxx\":{\"limit_relative\":50,\"max_power\":800,\"limit_set_status\":\"Ok\"}}\n</code></pre>"},{"location":"firmware/webinstall/","title":"Community WebFlasher","text":"<p>Use the Community WebFlasher to install OpenDTU-OnBattery on your ESP32 or ESP32-S3 board with a user-defined release version of the pre-built firmware binaries (sourced from the project's GitHub Releases Page).</p> <p>The WebFlasher is platform-independent, but requires the Chrome or Edge browser.</p>"},{"location":"firmware/webinstall/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>It might be required to manually enter bootloader mode   before attempting to flash the ESP32 using the WebFlasher.</li> <li>Try holding the <code>BOOT</code> button on your board until you see the WebFlasher is   erasing the flash memory and actually installing the firmware. This can help   when a reset is performed in the preparation step, as holding the <code>BOOT</code>   button ensures that the ESP32 restarts into bootloader mode.</li> <li>Make sure to disconnect peripherals from UART0.</li> </ul>"},{"location":"firmware/wifi_setup/","title":"Wi-Fi Setup","text":"<p>After startup, the device will act as an Access Point (AP) to allow (initial) configuration<sup>1</sup>.</p> <ul> <li>After the initial flashing of the microcontroller, an Access Point called   \"OpenDTU-*\" is opened. The default password is <code>openDTU42</code>.</li> <li>Use a web browser to visit http://192.168.4.1.</li> <li>The username to access config menus is \"admin\" and the password is the same   as for accessing the Access Point (default: <code>openDTU42</code>).</li> <li>Navigate to Settings --&gt; Network Settings and enter your Wi-Fi   credentials.</li> <li>OpenDTU-OnBattery then simultaneously connects to your Wi-Fi AP with these   credentials. Navigate to Info --&gt; Network and look into section   \"Network Interface (Station)\" for the IP address received via DHCP.</li> <li>If your Wi-Fi AP uses an allow-list for MAC-addresses, please be aware that   the ESP32 has two different MAC addresses for its AP and client modes. These   MAC addresses are also listed at Info --&gt; Network.</li> <li>When OpenDTU-OnBattery is connected to a configured Wi-Fi AP as a client, the   \"OpenDTU-*\" Access Point is closed after 3 minutes (timeout is configurable).</li> </ul> <p>Note</p> <ul> <li>OpenDTU-OnBattery needs access to a working NTP server to get the current   date &amp; time. Both are sent to the inverter with each request. Default NTP   server is <code>opendtu.pool.ntp.org</code>. If your network has different   requirements please change accordingly (Settings --&gt; NTP   Settings).</li> <li>Add your inverter in the inverter settings (Settings --&gt; Inverter   Settings).</li> </ul> <ol> <li> <p>The device always acts as an AP after booting, even if it is already   configured as a Wi-Fi client. The AP is closed after a configurable   timeout.\u00a0\u21a9</p> </li> </ol>"},{"location":"firmware/configuration/about/","title":"About","text":""},{"location":"firmware/configuration/about/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/battery_settings/","title":"Battery Settings","text":""},{"location":"firmware/configuration/battery_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/battery_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/battery_settings/#general-interface-settings","title":"General Interface Settings","text":""},{"location":"firmware/configuration/battery_settings/#verbose-logging","title":"Verbose Logging","text":"<p>Enable to log more information regarding the battery interface on the (serial) console. The actual verbosity and type of messages vary among the different data providers.</p>"},{"location":"firmware/configuration/battery_settings/#data-provider","title":"Data Provider","text":"<p>Select the data provider applicable to your setup. The settings for each battery data provider are different.</p>"},{"location":"firmware/configuration/battery_settings/#provider-settings","title":"Provider Settings","text":"<p>There are no additional settings for the Pylontech, Pytes, and Victron SmartShunt interfaces. Refer to the respective subpage for more information about the MQTT or JK BMS provider settings.</p>"},{"location":"firmware/configuration/battery_settings_jkbms/","title":"JK BMS Battery Provider","text":""},{"location":"firmware/configuration/battery_settings_jkbms/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/battery_settings_jkbms/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/battery_settings_jkbms/#jk-bms-settings","title":"JK BMS Settings","text":""},{"location":"firmware/configuration/battery_settings_jkbms/#interface-type","title":"Interface Type","text":"<p>Set this according to your hardware setup. Refer to the JK BMS hardware documentation to learn which value to choose.</p>"},{"location":"firmware/configuration/battery_settings_jkbms/#polling-interval","title":"Polling Interval","text":"<p>As the JK BMS does not broadcast values unsolicited, it is polled at this interval.</p>"},{"location":"firmware/configuration/battery_settings_mqtt/","title":"MQTT Battery Provider","text":""},{"location":"firmware/configuration/battery_settings_mqtt/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/battery_settings_mqtt/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/battery_settings_mqtt/#soc-settings","title":"SoC Settings","text":""},{"location":"firmware/configuration/battery_settings_mqtt/#soc-value-topic","title":"SoC Value Topic","text":"<p>MQTT topic to which the battery SoC value is published on your broker.</p>"},{"location":"firmware/configuration/battery_settings_mqtt/#json-path","title":"JSON Path","text":"<p>If the payload of the topic is not a numeric value but a serialized JSON object, this path expressions tells which value to extract from the JSON object.</p>"},{"location":"firmware/configuration/battery_settings_mqtt/#voltage-settings","title":"Voltage Settings","text":""},{"location":"firmware/configuration/battery_settings_mqtt/#voltage-value-topic","title":"Voltage Value Topic","text":"<p>MQTT topic to which the battery voltage value is published on your broker.</p>"},{"location":"firmware/configuration/battery_settings_mqtt/#json-path_1","title":"JSON Path","text":"<p>If the payload of the topic is not a numeric value but a serialized JSON object, this path expressions tells which value to extract from the JSON object.</p>"},{"location":"firmware/configuration/battery_settings_mqtt/#unit","title":"Unit","text":"<p>Allows to set the actual unit of the numeric voltage payload, often Volt (V) or Millivolt (mV).</p>"},{"location":"firmware/configuration/config_settings/","title":"Config Management","text":""},{"location":"firmware/configuration/config_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/config_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/config_settings/#backup-configuration-file-backup","title":"Backup: Configuration File Backup","text":""},{"location":"firmware/configuration/config_settings/#backup-the-configuration-file","title":"Backup the configuration file","text":"<p>Select the configuration file which you want to download.</p>"},{"location":"firmware/configuration/config_settings/#backup","title":"Backup","text":"<p>Press this button to download the previously selected config file. The format of this file is <code>.json</code> and can be opened with any text editor.</p>"},{"location":"firmware/configuration/config_settings/#restore-restore-the-configuration-file","title":"Restore: Restore the Configuration File","text":""},{"location":"firmware/configuration/config_settings/#target-file-selection","title":"Target file selection","text":"<p>Select the file type which you are going to upload. The following values are possible:</p> <ul> <li>Main Config (config.json): A config file which was previously backuped</li> <li>Pin Mapping (pin_mapping.json): A Device Profile configuration file.</li> </ul> <p>Warning</p> <p>There is no further check if the uploaded file is valid. Properly check your settings!</p>"},{"location":"firmware/configuration/config_settings/#source-file-selection","title":"Source file selection","text":"<p>Select the source file on your computer which you like to upload to the ESP.</p>"},{"location":"firmware/configuration/config_settings/#restore","title":"Restore","text":"<p>Press this button to upload the selected source file to the specified target file. Afterwards the ESP automatically reboots and reads the uploaded file.</p>"},{"location":"firmware/configuration/config_settings/#initialize-perform-factory-reset","title":"Initialize: Perform Factory Reset","text":""},{"location":"firmware/configuration/config_settings/#restore-factory-default-settings","title":"Restore Factory-Default Settings","text":"<p>This will delete the <code>config.json</code> file on the internal memory and therefor reset all settings to it's defaults. The <code>pin_mapping.json</code> file is preserved but the previously selected Device Profile is set to default values. After deleting all settings a automatic reboot is performed and the initial Access Point is opened again.</p>"},{"location":"firmware/configuration/console/","title":"Console","text":""},{"location":"firmware/configuration/console/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/console/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/console/#virtual-debug-console","title":"Virtual Debug Console","text":"<p>The virtual console shows (almost) the same as the serial console except for core dumps etc. The whole communication with the inverters or received MQTT topics are shown.</p>"},{"location":"firmware/configuration/console/#enable-auto-scroll","title":"Enable Auto Scroll","text":"<p>When enabled, the console automatically scrolls to the most current entry.</p>"},{"location":"firmware/configuration/console/#clear-console","title":"Clear Console","text":"<p>Use this button to erase all the output.</p>"},{"location":"firmware/configuration/console/#copy-to-clipboard","title":"Copy to clipboard","text":"<p>Use this button to copy the whole output to the clipboard.</p>"},{"location":"firmware/configuration/device_reboot/","title":"Device Reboot","text":""},{"location":"firmware/configuration/device_reboot/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/device_reboot/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/device_reboot/#perform-reboot","title":"Perform Reboot","text":""},{"location":"firmware/configuration/device_reboot/#reboot","title":"Reboot","text":"<p>Press this button to restart the ESP. A additional confirmation is required before the action is performed.</p>"},{"location":"firmware/configuration/device_settings/","title":"Device-Manager","text":""},{"location":"firmware/configuration/device_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/device_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/device_settings/#connection-settings","title":"Connection Settings","text":""},{"location":"firmware/configuration/device_settings/#selected-profile","title":"Selected profile","text":"<p>The drop-down shows an overview of all Device Profiles available in your <code>pin_mapping.json</code> file. If you select one of the mappings and press Save the DTU will be restarted and the appropriate pins will be used.</p>"},{"location":"firmware/configuration/device_settings/#connection-overview","title":"Connection overview","text":"<p>The table shows all available pin configurations and how they are assigned currently (column \"Active\"). The column \"Selected\" shows the pin assignment according to the currently selected profile. If there are differences between \"Active\" and \"Selected\" the cells are highlighted. That means you can select different profiles (without clicking Save) and watch which pins will change.</p>"},{"location":"firmware/configuration/device_settings/#display","title":"Display","text":"<p>This settings apply to a properbly connected display. See Device Profiles for display types and pin assignment.</p>"},{"location":"firmware/configuration/device_settings/#enable-power-save","title":"Enable Power Save","text":"<p>Turns off the display if no inverter is producing.</p>"},{"location":"firmware/configuration/device_settings/#enable-screensaver","title":"Enable Screensaver","text":"<p>Move the display a little bit on each update to prevent burn-in. This is useful especially for OLED displays.</p>"},{"location":"firmware/configuration/device_settings/#diagram-duration","title":"Diagram duration","text":"<p>The time period which is shown in the Diagram. If you like e.g. show the production of the last hour, set the value to <code>3600</code>.</p>"},{"location":"firmware/configuration/device_settings/#display-language","title":"Display language","text":"<p>The language of the display text. (e.g. german \"Heute\" instead of english \"Today\")</p>"},{"location":"firmware/configuration/device_settings/#rotation","title":"Rotation","text":"<p>This allows to rotate the display content based on your alignment.</p>"},{"location":"firmware/configuration/device_settings/#contrast","title":"Contrast","text":"<p>The contrast setting is only supported by some displays and the impact is also display specific.</p>"},{"location":"firmware/configuration/device_settings/#leds","title":"LEDs","text":"<p>This settings apply to properbly connected LEDs<sup>1</sup>. See Device Profiles for LED function and pin assignment.</p>"},{"location":"firmware/configuration/device_settings/#equal-brightness","title":"Equal brightness","text":"<p>When enabled, all sliders are set to the same value.</p>"},{"location":"firmware/configuration/device_settings/#led-0-brightness","title":"LED 0 brightness","text":"<p>Sets the brightness of the LED to a specific value. This is useful if the LED is too dazzling, for example.</p>"},{"location":"firmware/configuration/device_settings/#led-1-brightness","title":"LED 1 brightness","text":"<p>Please see LED 0 brightness.</p> <ol> <li> <p>Light-emitting diode \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/dpl/","title":"Dynamic Power Limiter (DPL)","text":""},{"location":"firmware/configuration/dpl/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/dpl/#settingsparameters","title":"Settings/Parameters","text":"<p>Dynamic UI</p> <p>Some settings may not be visiable/accessible, depending on your setup of other features, e.g., without a battery interface enabled, SoC thresholds cannot be configured.</p>"},{"location":"firmware/configuration/dpl/#general","title":"General","text":""},{"location":"firmware/configuration/dpl/#enable","title":"Enable","text":"<p>Enables or disables the DPL.</p> <p>Disabling</p> <p>When disabling the DPL using this switch, the inverter previously managed by the DPL (if any) is shut down. Once it was shut down, the DPL does not send any more commands to that inverter.</p>"},{"location":"firmware/configuration/dpl/#verbose-logging","title":"Verbose Logging","text":"<p>Enable to log more information regarding the calculation of the power limit to the (serial or web) console. Definitely enable this and read the logs if the DPL does not behave as expected, and share the output in case you seek help.</p>"},{"location":"firmware/configuration/dpl/#target-grid-consumption","title":"Target Grid Consumption","text":"<p>The DPL calculates an inverter limit such that the power meter reads this amount of power. To implement a zero export policy, set this value to zero. If this value is negative, the power limit will be calculated such that the configured power is fed into the grid.</p> <p>Over- and Undershooting</p> <p>The inverter will over- and undershoot, especially when significant loads (water heaters, electric stoves, etc.) are switch on or off. In particular this means that energy will be fed into the grid for some time (how long depends on the setup) when loads are switched off.</p>"},{"location":"firmware/configuration/dpl/#hysteresis","title":"Hysteresis","text":"<p>No limit update will be sent to the inverter if the difference between the calculated new limit and the current limit, as reported by the inverter, is less or equal to this hysteresis value.</p>"},{"location":"firmware/configuration/dpl/#inverter","title":"Inverter","text":""},{"location":"firmware/configuration/dpl/#target-inverter","title":"Target Inverter","text":"<p>Select the inverter to be controlled by the DPL. In the following, this inverter is refered to as the \"DPL inverter\".</p>"},{"location":"firmware/configuration/dpl/#inverter-is-powered-by-solar-modules","title":"Inverter Is Powered By Solar Modules","text":"<p>Enable if the DPL inverter is powered by solar panels rather than a battery. Switches and settings obsolete for these setups are hidden when this switch is enabled.</p>"},{"location":"firmware/configuration/dpl/#compensate-for-shading","title":"Compensate For Shading","text":"<p>For solar-powered inverters only</p> <p>This option is only available for solar-powered inverters and is not included in the screenshot above.</p> <p>Cabling limits</p> <p>Do NOT enable this option if the AC cabling is potentially unable to safely handle the rated inverter output. The rated output is the inverter's AC power output while its limit is at 100% and all inputs deliver such that the inverter does output 100% of its rating, e.g., 2000W for an HMS-2000. The inverter output can surge over the configured maximum power limit if any input is no longer saturated at the expected power level, e.g., if the shading of a solar module is removed.</p> <p>The calculated limit is usually sent to the inverter verbatim, and the inverter will output the amount of power equivalent to the calculated limit, as it is indeed able to draw the needed power from the battery. All inputs draw the same amount of current.</p> <p>Enable this option to scale the calculated limit such that the solar-powered inverter is expected to output the calculated limit, despite significantly different power being available on the inputs. This usually happens due to shading of a subset of solar modules. This scaling means that the limit sent to the inverter is actually higher than the calculated limit, but because some inputs are saturated, the effective power output is equal to the calculated limit.</p>"},{"location":"firmware/configuration/dpl/#input-used-for-voltage-measurement","title":"Input Used For Voltage Measurement","text":"<p>The battery voltage is read from the DPL inverter's input with this index if no other source is available to read the battery voltage.</p>"},{"location":"firmware/configuration/dpl/#minimum-power-limit","title":"Minimum Power Limit","text":"<p>In case the calculated limit for the inverter is smaller than this value, the inverter is actually</p> <ul> <li>shut down if the inverter is battery-powered.</li> <li>set to this minimum power limit if the inverter is solar-powered.</li> </ul> <p>Stable operation</p> <p>Small power limits (can) lead to oscillating power output and the inverter shutting down because of these oscillations. As a rule of thumb, the minimum limit should be greater or equal to the amount of inverter inputs times 12W.</p>"},{"location":"firmware/configuration/dpl/#base-load","title":"Base Load","text":"<p>In case the power meter reading is unavailable (transient error) or in setups without a power meter configured, this value is assumed as the power meter reading. Choose this value such that it is close to but slightly smaller than your household's base load, i.e., the amount of power that is expected to be consumed in any case.</p>"},{"location":"firmware/configuration/dpl/#maximum-power-limit","title":"Maximum Power Limit","text":"<p>The inverter limit is set such that its AC output does not exceed this value.</p>"},{"location":"firmware/configuration/dpl/#power-meter-reading-includes-inverter-output","title":"Power Meter Reading Includes Inverter Output","text":"<p>Enable this option if the power meter reading is reduced by the inverter's output when the inverter produces AC power. This is typically true, as the metering happens between the grid and the inverter.</p>"},{"location":"firmware/configuration/dpl/#automatic-restart-time","title":"Automatic Restart Time","text":"<p>Persistent Limit</p> <p>Manually set a low persistent limit when using this feature.</p> <p>The daily yield of the inverter is usually reset at night when the inverter turns off due to lack of light. To reset the daily yield even though the inverter is continuously powered by the battery, the inverter can be automatically restarted at the desired time.</p> <p>After the inverter restarts, it starts producing power. How much power that is depends on the value set as the persistent limit. Hence the persistent limit for inverters managed by the DPL shall be very low if they are automatically restarted. Otherwise, a possibly empty battery is drained with possibly high power for some time. The DPL will eventually set a new limit or put the inverter into standby after it restarted.</p>"},{"location":"firmware/configuration/dpl/#solar-passthrough","title":"Solar-Passthrough","text":""},{"location":"firmware/configuration/dpl/#enable-solar-passthrough","title":"Enable Solar-Passthrough","text":"<p>Enables or disables the (Full) Solar-Passthrough feature.</p>"},{"location":"firmware/configuration/dpl/#use-battery-at-night-even-if-only-partially-charged","title":"Use Battery At Night Even If Only Partially Charged","text":"<p>The inverter may only draw power from the battery during a discharge cycle. For a discharge cycle to start, the respective start threshold must be reached first. When enabling this option, a discharge cycle also starts roughly on sunset, even if the battery charge cycle did not complete.</p>"},{"location":"firmware/configuration/dpl/#full-solar-passthrough-losses","title":"(Full) Solar-Passthrough Losses","text":"<p>Line losses are to be expected when transferring energy from the solar charge controller to the inverter. These losses can be taken into account to prevent the battery from gradually discharging in (full) solar-passthrough mode. The power limit to be set on the inverter is additionally reduced by this factor after taking its efficiency into account.</p>"},{"location":"firmware/configuration/dpl/#battery-thresholds","title":"Battery Thresholds","text":"<p>In general, State of Charge (SoC) thresholds take priority over voltage thresholds, i.e., if the battery SoC is known (battery interface enabled, SoC value valid and not outdated) it is used to determine whether or not a particular threshold is reached.</p>"},{"location":"firmware/configuration/dpl/#ignore-battery-soc","title":"Ignore Battery SoC","text":"<p>Enable this switch to have the DPL use the voltage thresholds rather than the SoC thresholds even though the battery SoC is available. As the SoC value is hard to keep accurate, it is often a good option to start and stop discharging based on the battery's voltage rather than the reported SoC.</p>"},{"location":"firmware/configuration/dpl/#start-threshold-for-battery-discharing","title":"Start Threshold for Battery Discharing","text":"<p>Note</p> <p>This threshold is \"reached\" if the battery SoC or voltage value is greater or equal to this threshold value.</p> <p>Drawing power from the battery is allowed once the battery reaches this threshold. Reaching this threshold starts a discharge cycle.</p> <p>There is no need for this value to be close to the voltage the battery has when it is fully charged. Starting to use a partially charged battery, e.g., during the day while the battery is still being charged, is okay as well.</p>"},{"location":"firmware/configuration/dpl/#stop-threshold-for-battery-discharing","title":"Stop Threshold for Battery Discharing","text":"<p>Note</p> <p>This threshold is \"reached\" if the battery SoC or voltage value is smaller than this threshold value.</p> <p>Avoid BMS intervention</p> <p>When using the voltage stop threshold, it should be chosen such that the BMS has no need to interfere, i.e., such that the inverter stops discharging the battery long before the BMS disables dicharging the battery to protect it due to an undervoltage condition.</p> <p>Battery discharging is avoided once the battery reached this threshold. Reaching this threshold starts a charge cycle.</p> <p>This value must be smaller than the battery discharging start threshold.</p>"},{"location":"firmware/configuration/dpl/#full-solar-passthrough-start-threshold","title":"Full Solar-Passthrough Start Threshold","text":"<p>Note</p> <p>This threshold is \"reached\" if the battery SoC or voltage value is greater or equal to this threshold value.</p> <p>See Full Solar-Passthrough documentation.</p> <p>Set to 0% (SoC threshold) and 66V (voltage threshold) to effectively disable Full Solar-Passthrough while keeping Solar-Passthrough. Otherwise this is typically set to a value that indicates a (nearly) fully charged battery.</p>"},{"location":"firmware/configuration/dpl/#full-solar-passthrough-stop-threshold","title":"Full Solar-Passthrough Stop Threshold","text":"<p>Note</p> <p>This threshold is \"reached\" if the battery voltage value is smaller than this threshold value.</p> <p>See Full Solar-Passthrough documentation.</p> <p>When starting Full Solar-Passthrough, the battery stops charging as all solar power is used by the inverter to produce AC power. This causes the battery voltage to drop (slightly). Due to fluctuations in the solar power output, the battery might be slightly discharged in Full Solar-Passthrough mode, causing the battery voltage to drop further. For that reason, this threshold shall be configured to a slightly smaller value than the Full Solar-Passthrough start threshold, such that Full Solar-Passthrough is not started and stopped repeatedly.</p>"},{"location":"firmware/configuration/dpl/#load-correction-factor","title":"Load correction factor","text":"<p>Applicable to voltage thresholds</p> <p>This settings is only applicable if the DPL is using voltage thresholds.</p> <p>When the battery is discharged, its voltage drops. Additionally, depending on where the battery voltage is read, line losses can significantly influence the voltage reading, especially at high currents. In both cases, the voltage drop scales with the discharge current.</p> <p>In order to not stop the inverter too early (stop threshold) while the battery is being discharged, this load correction factor can be specified to calculate (estimate) the battery voltage if it became idle. In other words: This value should be choosen such that the battery settles back to around the stop threshold voltage in the moment the DPL decides to stop discharging the battery because it hit the stop threshold.</p> <p><code>corrected (idle) voltage = measured battery voltage + (power * correction factor)</code></p> <p>This value depends on your setup and requires tuning. Assuming a LFP battery pack, perform the tuning procedure outside the non-linear voltage range, i.e., when the battery is neither full nor empty.</p> <ol> <li>Disable all battery loads. This possibly means to disable the DPL.</li> <li>Let the battery settle and note the idle voltage at the point where the DPL    reads the voltage as well, i.e., the voltage reported by the BMS,    by the charge controller, or by the inverter input,    depending on your setup.</li> <li>Enable a high load with a specific power. This typically means to set your    inverter to the maximum allowable limit (using the web interface).</li> <li>Observe the battery voltage drop and note this voltage (load voltage).</li> <li>Disable the load after a couple of seconds.</li> <li>The battery voltage should settle back (close) to the idle voltage noted    earlier.</li> <li><code>correction factor = (idle voltage - load voltage) / specific power</code></li> </ol>"},{"location":"firmware/configuration/dtu_settings/","title":"DTU Settings","text":""},{"location":"firmware/configuration/dtu_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/dtu_settings/#settings-parameters","title":"Settings / Parameters","text":"<p>The possible settings depend on the RF module (NRF24L01+ or CMT2300A) used. If you have configured both modules in your Device Profile, the settings for both modules will appear.</p>"},{"location":"firmware/configuration/dtu_settings/#dtu-configuration","title":"DTU Configuration","text":""},{"location":"firmware/configuration/dtu_settings/#serial","title":"Serial","text":"<p>The serial of the DTU which is used to communicate with the inverters. It's like the inverter serial number but belongs to the DTU. A random number is generated on the first start of OpenDTU-OnBattery and persisted in the configuration. It is important that all the DTU's in RF<sup>1</sup> range have different serial numbers.</p>"},{"location":"firmware/configuration/dtu_settings/#poll-interval","title":"Poll Interval:","text":"<p>The time (in seconds) between the individual inverter queries. If you choose this value to small the ESP does not have enough time to perform other tasks.</p>"},{"location":"firmware/configuration/dtu_settings/#nrf24-transmitting-power","title":"NRF24 Transmitting power","text":"<p>Specify the transmit power of the RF module. Choose it according to the phrase: \"As large as necessary, as small as possible.\" If you select a value that is too high, the power supply unit may not be able to supply enough current (especially low-cost power supply units are affected). Additional capacitors on the RF module can help here.</p> <p>Possible values:</p> <ul> <li>Minimum (-18dBm)</li> <li>Low (-12dBm)</li> <li>High (-6dBm)</li> <li>Maximum (0dBm)</li> </ul> <p>Warning</p> <p>Please make sure the maximum transmission power does not exeed you local regulations!</p>"},{"location":"firmware/configuration/dtu_settings/#cmt2300a-transmitting-power","title":"CMT2300A Transmitting power","text":"<p>Please see NRF24 Transmitting power. There is a more granular setting option.</p>"},{"location":"firmware/configuration/dtu_settings/#cmt2300a-regioncountry","title":"CMT2300A Region/Country","text":"<p>This setting affects the frequency selection below and also changes the band configuration of the CMT2300A module.</p>"},{"location":"firmware/configuration/dtu_settings/#cmt2300a-frequency","title":"CMT2300A frequency","text":"<p>After starting an HMS/HMT inverter (or after 15 minutes without communication), it listens on a frequency of 865 MHz in Europe or 915 MHz for US devices (-NA). The DTU must change this frequency before further communication. This is the value that can be set here. If communication with the inverter is not possible, it is possible that radio communication is already taking place on the corresponding frequency. In this case, the value must be adjusted slightly.</p> <p>Warning</p> <p>Please check your local regulations if you are allowed to send on the choosen frequency with the specified transmit power!</p> <ol> <li> <p>Radio frequency \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/firmware_upgrade/","title":"Firmware Upgrade","text":""},{"location":"firmware/configuration/firmware_upgrade/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/firmware_upgrade/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/firmware_upgrade/#firmware-upload","title":"Firmware Upload","text":""},{"location":"firmware/configuration/firmware_upgrade/#file-selection","title":"File selection","text":"<p>Choose the firmware file which you want to flash. See this overview for a list of pre-compiled files. After the upload and flash process is complete the device will automatically restart. For further information please refere to the Update Instructions.</p>"},{"location":"firmware/configuration/inverter_settings/","title":"Inverter Settings","text":""},{"location":"firmware/configuration/inverter_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/inverter_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/inverter_settings/#add-new-inverter","title":"Add new Inverter","text":""},{"location":"firmware/configuration/inverter_settings/#serial","title":"Serial","text":"<p>The unique serial number of the inverter. It can be found on a lable at the backside of the inverter.</p>"},{"location":"firmware/configuration/inverter_settings/#name","title":"Name","text":"<p>A custom name that identifies the inverter. You can choose whatever you want.</p>"},{"location":"firmware/configuration/inverter_settings/#inverter-list","title":"Inverter List","text":""},{"location":"firmware/configuration/inverter_settings/#table-columns","title":"Table columns","text":"Name Description # Grips to change the order of the inverters in the Live View Status Indicates whether Poll and Send are enabled. Yellow means only during the day, black also at night.<ul><li> Poll</li><li> Send</li></ul> Serial Serial number Name Custom name Type The detected inverter type based on the serial number. If you get <code>Unknown</code> in this column you either misstyped the number or your inverter is not yet supported."},{"location":"firmware/configuration/inverter_settings/#save-order","title":"Save order","text":"<p>If you changed the order of the inverters using the grips in the first column you can save the new order here.</p>"},{"location":"firmware/configuration/inverter_settings/#edit-inverter","title":"Edit Inverter","text":"<p>Press the blue pen to edit the inverter.</p>"},{"location":"firmware/configuration/inverter_settings/#general","title":"General","text":""},{"location":"firmware/configuration/inverter_settings/#inverter-serial","title":"Inverter Serial","text":"<p>The serial number of the inverter (see here)</p>"},{"location":"firmware/configuration/inverter_settings/#inverter-name","title":"Inverter Name","text":"<p>The custom name of the inverter (see here)</p>"},{"location":"firmware/configuration/inverter_settings/#poll-inverter-data","title":"Poll inverter data","text":"<p>When enabled, the inverter gets polled for data during the day. Day and Night is calculated using the current time and the location specified at NTP Configuration.</p>"},{"location":"firmware/configuration/inverter_settings/#poll-inverter-data-at-night","title":"Poll inverter data at night","text":"<p>When enabled, the inverter gets also polled at night times.</p>"},{"location":"firmware/configuration/inverter_settings/#send-commands","title":"Send commands","text":"<p>When enabled, control commands (e.g. restart/poweroff/limit) will be send to the inverter. Otherwise the commands get dropped.</p>"},{"location":"firmware/configuration/inverter_settings/#send-commands-at-night","title":"Send commands at night","text":"<p>When enabled, control commands are also send at night. Otherwise the commands get dropped.</p>"},{"location":"firmware/configuration/inverter_settings/#string","title":"String","text":""},{"location":"firmware/configuration/inverter_settings/#name-string-1-x","title":"Name string [1-x]","text":"<p>A custom name for the specific input. You can choose whatever you want. If you leave it empty the name is just <code>String [1-x]</code>.</p>"},{"location":"firmware/configuration/inverter_settings/#max-power-string-1-x","title":"Max power string [1-x]","text":"<p>Enter the power of the connected solar panel on the specific input. This value is used to calculate the \"Irradiation\" in the live view.</p>"},{"location":"firmware/configuration/inverter_settings/#yield-total-offset-string-1-x","title":"Yield total offset string [1-x]","text":"<p>The value entered will be added to the received \"Yield Total\" value from the inverter. The value can also be negative. With this parameter it is possible, for example, to zero the yield at the beginning of the year (or for a used purchase) or to set it to a specific value. The total yield in the inverter cannot be reset. Comparable to the total kilometre display in a car. Therefore the offset is just set within the DTU.</p>"},{"location":"firmware/configuration/inverter_settings/#advanced","title":"Advanced","text":""},{"location":"firmware/configuration/inverter_settings/#reachable-threshold","title":"Reachable Threshold","text":"<p>Number of failed poll requests until the inverter is shown as offline.</p>"},{"location":"firmware/configuration/inverter_settings/#zero-runtime-data","title":"Zero runtime data","text":"<p>Sets runtime data (like current power, voltage, temperature, frequency but NO yield data) to zero when the inverter gets unreachable.</p>"},{"location":"firmware/configuration/inverter_settings/#zero-daily-yield-at-midnight","title":"Zero daily yield at midnight","text":"<p>Sets runtime data (like current power, voltage, temperature, frequency but NO yield data) to zero at midnight.</p>"},{"location":"firmware/configuration/inverter_settings/#yield-day-correction","title":"Yield Day Correction","text":"<p>By default, the daily yield is reset when the inverter is restarted. This is handled at the inverter itself. On a cloudy day it can happen that the inverter restarts multiple times during dawn. This leads to the effect that the daily yield is already displayed as zero in the evening. If this setting is activated, the DTU remembers the totalised daily yield value generated (between restarts of the inverter) until midnight.</p>"},{"location":"firmware/configuration/inverter_settings/#delete-inverter","title":"Delete Inverter","text":"<p>Press the red waste bin to delete an inverter.</p>"},{"location":"firmware/configuration/inverter_settings/#delete","title":"Delete","text":"<p>Deletes the currently selected inverter.</p>"},{"location":"firmware/configuration/inverter_settings/#cancel","title":"Cancel","text":"<p>Returns to the previous view without deleting the inverter.</p>"},{"location":"firmware/configuration/live_view/","title":"Main","text":""},{"location":"firmware/configuration/live_view/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/live_view/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/live_view_eventlog/","title":"Eventlog","text":""},{"location":"firmware/configuration/live_view_eventlog/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/live_view_eventlog/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/live_view_gridprofile/","title":"Grid Profile","text":""},{"location":"firmware/configuration/live_view_gridprofile/#screenshots","title":"Screenshots","text":""},{"location":"firmware/configuration/live_view_gridprofile/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/live_view_info/","title":"Inverter Info","text":""},{"location":"firmware/configuration/live_view_info/#screenshots","title":"Screenshots","text":""},{"location":"firmware/configuration/live_view_info/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/live_view_limit/","title":"Limit Settings","text":""},{"location":"firmware/configuration/live_view_limit/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/live_view_limit/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/live_view_power/","title":"Power Settings","text":""},{"location":"firmware/configuration/live_view_power/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/live_view_power/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/login/","title":"Login","text":""},{"location":"firmware/configuration/login/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/mqtt_info/","title":"MQTT Information","text":""},{"location":"firmware/configuration/mqtt_info/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/mqtt_info/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/mqtt_info/#configuration-summary","title":"Configuration Summary","text":""},{"location":"firmware/configuration/mqtt_info/#home-assistant-mqtt-auto-discovery-configuration-summary","title":"Home Assistant MQTT Auto Discovery Configuration Summary","text":""},{"location":"firmware/configuration/mqtt_info/#runtime-summary","title":"Runtime Summary","text":""},{"location":"firmware/configuration/mqtt_settings/","title":"MQTT Settings","text":"<p>Tip: Learn more about the protocol on MQTT Essentials</p>"},{"location":"firmware/configuration/mqtt_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/mqtt_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/mqtt_settings/#mqtt-configuration","title":"MQTT Configuration","text":""},{"location":"firmware/configuration/mqtt_settings/#enable-mqtt","title":"Enable MQTT","text":"<p>Enables or disables the MQTT functionality.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-home-assistant-mqtt-auto-discovery","title":"Enable Home Assistant MQTT Auto Discovery","text":"<p>Enables or disables the Home Assistant MQTT Auto Discovery functionality.</p>"},{"location":"firmware/configuration/mqtt_settings/#mqtt-broker-parameter","title":"MQTT Broker Parameter","text":"<p>This settings are only visible if MQTT is enabled.</p>"},{"location":"firmware/configuration/mqtt_settings/#hostname","title":"Hostname","text":"<p>Host name or IP address of your MQTT broker. Make sure your DNS servers are set-up properly if you specify a host name.</p>"},{"location":"firmware/configuration/mqtt_settings/#port","title":"Port","text":"<p>Port of your MQTT broker. Default port for unencrypted connections is <code>1883</code> and for encrypted connections <code>8883</code>.</p>"},{"location":"firmware/configuration/mqtt_settings/#username","title":"Username","text":"<p>Optional username to connect to your MQTT broker. Leave emtpy to perform an anonymous connection.</p>"},{"location":"firmware/configuration/mqtt_settings/#password","title":"Password","text":"<p>Optional password to connect to your MQTT broker.</p>"},{"location":"firmware/configuration/mqtt_settings/#base-topic","title":"Base Topic","text":"<p>Below the base topic all the payload data is published via separate topics. An overview of all available topics can be found here.</p>"},{"location":"firmware/configuration/mqtt_settings/#publish-interval","title":"Publish Interval","text":"<p>The interval at which the MQTT data is published.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-cleansession-flag","title":"Enable CleanSession flag","text":"<p>Enables the CleanSession<sup>3</sup> flag for MQTT communication.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-retain-flag","title":"Enable Retain flag","text":"<p>Publish all information with retain<sup>2</sup> flag. This has the advantage that each value is immediatly avilable if you connect to your broker and subscribe to the specific topics you will get immediatly the latest values.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-tls","title":"Enable TLS","text":"<p>Enables a secure TLS connection to your MQTT broker. If using this you have to get a proper certificate (self signed will not work, is has to be signed by a CA) and the hostname entered as MQTT Hostname must match the CN in the certificate. You must also specify the CA-Root-Certificate.</p>"},{"location":"firmware/configuration/mqtt_settings/#ca-root-certificate","title":"CA-Root-Certificate","text":"<p>The root certificate of your CA if you are using a TLS connection to your broker. Should include the <code>-----BEGIN CERTIFICATE-----</code> and <code>-----END CERTIFICATE-----</code> tags.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-tls-certificate-login","title":"Enable TLS Certificate Login","text":"<p>Uses certificates to authenticate agains a MQTT broker. When enabled, the TLS Client-Certificate and the TLS Client-Key has to be supplied.</p>"},{"location":"firmware/configuration/mqtt_settings/#tls-client-certificate","title":"TLS Client-Certificate","text":"<p>Should include the <code>-----BEGIN CERTIFICATE-----</code> and <code>-----END CERTIFICATE-----</code> tags.</p>"},{"location":"firmware/configuration/mqtt_settings/#tls-client-key","title":"TLS Client-Key","text":"<p>Should include the <code>-----BEGIN CERTIFICATE-----</code> and <code>-----END CERTIFICATE-----</code> tags.</p>"},{"location":"firmware/configuration/mqtt_settings/#lwt-parameters","title":"LWT Parameters","text":"<p>This settings are only visible if MQTT is enabled.</p>"},{"location":"firmware/configuration/mqtt_settings/#lwt-topic","title":"LWT Topic","text":"<p>Sets the topic of the LWT<sup>1</sup> Message</p>"},{"location":"firmware/configuration/mqtt_settings/#lwt-online-message","title":"LWT Online message","text":"<p>Sets the payload that will be published to the LWT Topic if the device comes online.</p>"},{"location":"firmware/configuration/mqtt_settings/#lwt-offline-message","title":"LWT Offline message","text":"<p>Sets the payload that will be set to the LWT Topic if the device becomes unavailable.</p>"},{"location":"firmware/configuration/mqtt_settings/#qos-quality-of-service","title":"QoS (Quality of Service)","text":"<p>Sets the QoS of the LWT topic.</p>"},{"location":"firmware/configuration/mqtt_settings/#home-assistant-mqtt-auto-discovery-parameters","title":"Home Assistant MQTT Auto Discovery Parameters","text":"<p>This settings are only visible if Enable Home Assistant MQTT Auto Discovery is enabled.</p> <p>Home Assistant provides the MQTT integration and through this integration it is possible to exploit and manage the messages published by OpenDTU-OnBattery. Once this integration on home assistant is configured with the same MQTT broker, it is possible to create devices manually or through the autodiscovery function.</p>"},{"location":"firmware/configuration/mqtt_settings/#prefix-topic","title":"Prefix Topic","text":"<p>The base under which all Home Assistant MQTT Auto Discovery magic happens. If you haven't changed this topic in your Home Assistant installation the default <code>homeassistant/</code> is the right one.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-retain-flag_1","title":"Enable Retain Flag","text":"<p>Publish all auto discovery information with retain<sup>2</sup> flag. This has the advantage that Home Assistant automaticaly finds all devices on restart.</p>"},{"location":"firmware/configuration/mqtt_settings/#enable-expiration","title":"Enable Expiration","text":"<p>When enabled, values in Home Assistant will become \"unavailable\" if they don't receive an update in a given time.</p>"},{"location":"firmware/configuration/mqtt_settings/#individual-panels","title":"Individual Panels","text":"<p>When enabled, the data each individual panel will be made available in Home Assistant</p> <ol> <li> <p>Last Will and Testament \u21a9</p> </li> <li> <p>Retained Messages \u21a9\u21a9</p> </li> <li> <p>CleanSession \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/network_info/","title":"Network Info","text":""},{"location":"firmware/configuration/network_info/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/network_info/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/network_info/#wifi-information-station","title":"WiFi Information (Station)","text":""},{"location":"firmware/configuration/network_info/#status","title":"Status","text":""},{"location":"firmware/configuration/network_info/#ssid","title":"SSID","text":""},{"location":"firmware/configuration/network_info/#bssid","title":"BSSID","text":""},{"location":"firmware/configuration/network_info/#quality","title":"Quality","text":""},{"location":"firmware/configuration/network_info/#rssi","title":"RSSI","text":""},{"location":"firmware/configuration/network_info/#wifi-information-access-point","title":"Wifi Information (Access Point)","text":"<p>This section contain information about the internal access point which will be opened at device startup or if no connection to the configured WiFi or ethernet can be established.</p>"},{"location":"firmware/configuration/network_info/#status_1","title":"Status","text":"<p>Indicates whether the internal access point is active or not.</p>"},{"location":"firmware/configuration/network_info/#ssid_1","title":"SSID","text":"<p>Name of the internal access point. Password for the internal access point equals the <code>admin</code> password of the Web UI.</p>"},{"location":"firmware/configuration/network_info/#stations","title":"# Stations","text":"<p>Number of station currently connected to the internal access point.</p>"},{"location":"firmware/configuration/network_info/#network-interface-station","title":"Network Interface (Station)","text":""},{"location":"firmware/configuration/network_info/#hostname","title":"Hostname","text":""},{"location":"firmware/configuration/network_info/#ip-address","title":"IP Address","text":""},{"location":"firmware/configuration/network_info/#netmask","title":"Netmask","text":""},{"location":"firmware/configuration/network_info/#default-gateway","title":"Default Gateway","text":""},{"location":"firmware/configuration/network_info/#dns-1","title":"DNS 1","text":""},{"location":"firmware/configuration/network_info/#dns-2","title":"DNS 2","text":""},{"location":"firmware/configuration/network_info/#mac-address","title":"MAC Address","text":""},{"location":"firmware/configuration/network_info/#network-interface-access-point","title":"Network Interface (Access Point)","text":""},{"location":"firmware/configuration/network_info/#ip-address_1","title":"IP Address","text":"<p>IP address of OpenDTU-OnBattery when a client is connected via the internal access point.</p>"},{"location":"firmware/configuration/network_info/#mac-address_1","title":"MAC Address","text":"<p>MAC address of the internal access point</p>"},{"location":"firmware/configuration/network_settings/","title":"Network Settings","text":""},{"location":"firmware/configuration/network_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/network_settings/#settings-parameters","title":"Settings / Parameters","text":"<p>Note</p> <p>Some of this settings apply to the WiFi interface and the ethernet interface (if available on your board and configured). If ethernet is connected, the WiFi connection will be disabled and it's settings will be transfered to the ethernet interface (also the other way around). The ethernet interface has higher priority.</p>"},{"location":"firmware/configuration/network_settings/#wifi-configuration","title":"WiFi Configuration","text":""},{"location":"firmware/configuration/network_settings/#wifi-ssid","title":"WiFi SSID","text":"<p>The SSID<sup>1</sup> / name of your WiFi network.</p>"},{"location":"firmware/configuration/network_settings/#wifi-password","title":"WiFi Password","text":"<p>Optional password for the access point, if required.</p>"},{"location":"firmware/configuration/network_settings/#wifi-hostname","title":"WiFi Hostname","text":"<p>The host name with which OpenDTU-OnBattery logs on to various services (DNS server, MQTT server, mDNS). This name must be unique in the LAN<sup>2</sup>. The text <code>%06X</code> will be replaced internally by the ChipID of the ESP. This helps to keep the hostname unique. The hostname will be also used if the ESP is connected via ethernet.</p>"},{"location":"firmware/configuration/network_settings/#enable-dhcp","title":"Enable DHCP","text":"<p>If DHCP is enabled the OpenDTU-OnBattery will request it's network information like IP/Netmask/Gateway from e.g. your router. If you disable this function you have to enter these settings manually.</p>"},{"location":"firmware/configuration/network_settings/#static-ip-configuration","title":"Static IP Configuration","text":""},{"location":"firmware/configuration/network_settings/#ip-address","title":"IP Address","text":"<p>IP Address which is assigned to either the WiFi interface or the ethernet interface (if applicable). Format: <code>xxx.xxx.xxx.xxx</code></p>"},{"location":"firmware/configuration/network_settings/#netmask","title":"Netmask","text":"<p>The Netmask which is assigned to either the WiFi interface or the ethernet interface (if applicable). Format: <code>xxx.xxx.xxx.xxx</code>. The default value for a Class-C network (which you have most likely should be <code>255.255.255.0</code>).</p>"},{"location":"firmware/configuration/network_settings/#default-gateway","title":"Default Gateway","text":"<p>The default gateway which is assigned to either the WiFi interface or the ethernet interface (if applicable). Format: <code>xxx.xxx.xxx.xxx</code>. For a standard home network this should be the IP of your router (e.g. <code>192.168.178.1</code>).</p>"},{"location":"firmware/configuration/network_settings/#dns-server-1","title":"DNS Server 1","text":"<p>The DNS server which is assigned to either the WiFi interface or the ethernet interface (if applicable). Format: <code>xxx.xxx.xxx.xxx</code>. For a standard home network this should be the IP of your router (e.g. <code>192.168.178.1</code>).</p>"},{"location":"firmware/configuration/network_settings/#dns-server-2","title":"DNS Server 2","text":"<p>Please see DNS Server 1</p>"},{"location":"firmware/configuration/network_settings/#mdns-settings","title":"mDNS Settings","text":""},{"location":"firmware/configuration/network_settings/#enable-mdns","title":"Enable mDNS","text":"<p>Enables or disables the mDNS publication of the IP address and version the OpenDTU-OnBattery. This is useful to address the DTU in the network with its DNS name if no DNS server (e.g. on the router) is available. The generated mDNS name is composed as follows: <code>&lt;WiFi Hostname&gt;.local</code>.</p>"},{"location":"firmware/configuration/network_settings/#wifi-configuration-admin-accesspoint","title":"WiFi Configuration (Admin AccessPoint)","text":""},{"location":"firmware/configuration/network_settings/#accesspoint-timeout","title":"AccessPoint Timeout","text":"<p>After each device restart, if no valid WiFi configuration is found or if the configured AccessPoint is not found, an internal AccessPoint is opened. In case that the Wifi configuration is valid and the infrastrcuture AP<sup>3</sup> is reachable, the internal AP is closed after the time configured in this setting.</p> <ol> <li> <p>SSID \u21a9</p> </li> <li> <p>Local Area Network \u21a9</p> </li> <li> <p>Access Point \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/ntp_info/","title":"NTP Information","text":""},{"location":"firmware/configuration/ntp_info/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/ntp_info/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/ntp_info/#configuration-summary","title":"Configuration Summary","text":""},{"location":"firmware/configuration/ntp_info/#server","title":"Server","text":"<p>Hostname or IP address of the configured NTP server.</p>"},{"location":"firmware/configuration/ntp_info/#timezone","title":"Timezone","text":"<p>Technical representation of the configured time zone.</p>"},{"location":"firmware/configuration/ntp_info/#timezone-description","title":"Timezone Description","text":"<p>Timezone description in human readable form.</p>"},{"location":"firmware/configuration/ntp_info/#current-time","title":"Current time","text":""},{"location":"firmware/configuration/ntp_info/#status","title":"Status","text":"<p>Shows whether the internal clock of the ESP is synced with the configured NTP server. This is required to send requests to the inverter.</p>"},{"location":"firmware/configuration/ntp_info/#local-time","title":"Local Time","text":"<p>NTP servers provide the time in UTC<sup>1</sup> time format. It is necessary to convert the UTC time to your local time zone based on the configuration. This value should show your local time, otherwise the timezone configuration is not correct.</p>"},{"location":"firmware/configuration/ntp_info/#sunrise","title":"Sunrise","text":"<p>Time of todays sunrise. Used to set the day/night mode.</p>"},{"location":"firmware/configuration/ntp_info/#sunset","title":"Sunset","text":"<p>Time of todays sunset. Used to set the day/night mode.</p>"},{"location":"firmware/configuration/ntp_info/#mode","title":"Mode","text":"<p>Shows the current operation mode (day/night). Depending on your inverter configuration data is fetched / commands are sent to the inverter.</p> <ol> <li> <p>Coordinated Universal Time \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/ntp_settings/","title":"NTP Settings","text":""},{"location":"firmware/configuration/ntp_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/ntp_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/ntp_settings/#ntp-configuration","title":"NTP Configuration","text":"<p>OpenDTU-OnBattery needs a proper synced clock to start fetching the inverter. (Every request contains the time. This synchronises the clock in the inverter at the same time. This is particularly important for the event display.)</p>"},{"location":"firmware/configuration/ntp_settings/#time-server","title":"Time Server","text":"<p>Hostname or IP address of your NTP<sup>1</sup> server. The default value is ok unless your WiFi does not provide access to the internet. In this case you have to enter your own NTP server (mostly the IP of your router e.g. <code>192.168.178.1</code>).</p>"},{"location":"firmware/configuration/ntp_settings/#timezone","title":"Timezone","text":"<p>Select the city or timezone you are in. NTP<sup>1</sup> deliver the current time as UTC<sup>2</sup>. The timezone is used to calculate your specific current time.</p>"},{"location":"firmware/configuration/ntp_settings/#timezone-config","title":"Timezone Config","text":"<p>This information shows how the time zone is interpreted internally. It contains information regarding offsets to UTC<sup>2</sup> and also regarding DST<sup>3</sup>.</p>"},{"location":"firmware/configuration/ntp_settings/#location-configuration","title":"Location Configuration","text":"<p>The location coordinates are required to determine the sunset and sunrise. The sunset type adds an offset to that value. This is used e.g. to stop polling the inverter at night.</p>"},{"location":"firmware/configuration/ntp_settings/#latitude","title":"Latitude","text":"<p>Latitude of the location of your inverter in degree.</p>"},{"location":"firmware/configuration/ntp_settings/#longitude","title":"Longitude","text":"<p>Longitude of the location of your inverter in degree.</p>"},{"location":"firmware/configuration/ntp_settings/#sunset-type","title":"Sunset type","text":"<p>There are differnt \"Sunset types\" which add different offsets to the calculated time. The following values are possible:</p> <ul> <li>Standard dawn (90.8\u00b0)</li> <li>Nautical dawn (102\u00b0)</li> <li>Civil dawn (96\u00b0)</li> <li>Astronomical dawn (102\u00b0)</li> </ul> <p>For some locations there might be even no sunset / sunrise because the sun shines everytime or never. See here for further explanation.</p>"},{"location":"firmware/configuration/ntp_settings/#manual-time-synchronization","title":"Manual Time Synchronization","text":""},{"location":"firmware/configuration/ntp_settings/#current-opendtu-onbattery-time","title":"Current OpenDTU-OnBattery Time","text":"<p>Shows the current time of the ESP MCU. This value is used for all further calculations.</p>"},{"location":"firmware/configuration/ntp_settings/#current-local-time","title":"Current Local Time","text":"<p>Shows the current time detected from your web browser.</p>"},{"location":"firmware/configuration/ntp_settings/#synchronize-time","title":"Synchronize Time","text":"<p>Press this button to manually synchronize the ESP time with your local time. This can be usefull if no NTP server is available.</p> <p>Note</p> <p>Keep in mind, that the time gets lost after a power cycle. Also note, that the time accuracy will be skewed badly, as it can not resynchronised regularly using a NTP server and the ESP32 microcontroller does not have a RTC<sup>4</sup>.</p> <ol> <li> <p>Network Time Protocol \u21a9\u21a9</p> </li> <li> <p>Coordinated Universal Timeordic \u21a9\u21a9</p> </li> <li> <p>Daylight saving time \u21a9</p> </li> <li> <p>Real-time clock \u21a9</p> </li> </ol>"},{"location":"firmware/configuration/security_settings/","title":"Security Settings","text":""},{"location":"firmware/configuration/security_settings/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/security_settings/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/configuration/security_settings/#admin-password","title":"Admin password","text":""},{"location":"firmware/configuration/security_settings/#password","title":"Password","text":"<p>This password is used both to log in to the web interface and to connect to the Admin AccessPoint.</p>"},{"location":"firmware/configuration/security_settings/#repeat-password","title":"Repeat Password","text":"<p>Enter the same password as above. Just to make sure there is no typo.</p>"},{"location":"firmware/configuration/security_settings/#permissions","title":"Permissions","text":""},{"location":"firmware/configuration/security_settings/#allow-readonly-access-to-web-interface-without-password","title":"Allow readonly access to web interface without password","text":"<p>By default, any access to OpenDTU-OnBattery data is password restricted. If you enable this feature guest users are able to access read-only information (like Live View or System Information) without password.</p>"},{"location":"firmware/configuration/system_info/","title":"System Info","text":""},{"location":"firmware/configuration/system_info/#screenshot","title":"Screenshot","text":""},{"location":"firmware/configuration/system_info/#settings-parameters","title":"Settings / Parameters","text":""},{"location":"firmware/howto/migrate_generic/","title":"Migrate 'generic' to 'generic_esp32'","text":"<p>Applicability</p> <p>This information only applies to older releases. Neither the <code>generic</code> nor the <code>generic_esp32</code> firmware variants are released any more.</p>"},{"location":"firmware/howto/migrate_generic/#differences","title":"Differences","text":"<p>The only difference between <code>opendtu-onbattery-generic.bin</code> (deprecated) and <code>opendtu-onbattery-generic_esp32.bin</code> is, that <code>opendtu-onbattery-generic.bin</code> contains hard-coded pins for the nRF24 Module (and only for that module). The <code>opendtu-onbattery-generic_esp32.bin</code> comes with no pre-configured pins and can be set-up by uploading a device profile.</p>"},{"location":"firmware/howto/migrate_generic/#migration-process","title":"Migration process","text":"<ul> <li>Make a backup of your configuration! (Settings --&gt; Config Management --&gt; Backup --&gt; Select config.json --&gt; Press Backup)</li> <li>Download the latest <code>opendtu-onbattery-generic_esp32.bin</code> file from the GitHub Release Page</li> <li>Download a compatible device profile. It contains the same pin assignments as the hard-coded ones in <code>opendtu-onbattery-generic.bin</code>.</li> <li>Upload the device profile. (Settings --&gt; Config Management --&gt; Restore --&gt; Select Pin Mapping (pin_mapping.json) --&gt; Select <code>nodemcu_esp32.json</code> --&gt; Press Restore)</li> <li>The ESP reboots but does nothing different at the moment.</li> <li>Select the new uploaded device profile. This can already be done using the <code>opendtu-onbattery-generic.bin</code> firmware. (Settings --&gt; Device-Manager --&gt; Selected profile --&gt; Select <code>NRF24</code> --&gt; Press Save)</li> <li>The ESP reboots and uses the pin assignment from the device profile. (Which makes no difference because they are equal to the old one)</li> <li>Upload the new firmware (Settings --&gt; Firmware Upgrade)</li> <li>The ESP reboots</li> <li>All done!</li> </ul>"},{"location":"firmware/howto/serial_console/","title":"Access the serial console","text":"<p>The serial console which is shown in the WebUI does not show the whole boot process and also not several very critical errors, because in such moments the TCP connection is also interrupted. There are several ways to look at the serial console. First of all, the ESP32 has to be connected via an USB cable to the computer.</p>"},{"location":"firmware/howto/serial_console/#windows","title":"Windows","text":"<p>If you are using Windows you can use, e.g., Putty</p> <ul> <li>Download the putty.exe file and run it.</li> <li> <p>Select \"Connection type\" --&gt; \"Serial\", enter the correct serial port (e.g.,   COM3) and the 115200 as the baud rate.</p> <p></p> </li> <li> <p>In the section \"Session\" --&gt; \"Logging\" you can optionally configure logging   output to a file.</p> </li> <li>Then click \"Open\".</li> </ul>"},{"location":"firmware/howto/serial_console/#linux","title":"Linux","text":"<p>You will see a device pop up when connecting your ESP32. It may be <code>/dev/ttyUSB0</code> (or <code>USB1</code>, <code>USB2</code>, etc.) or <code>/dev/ttyACM0</code> (or <code>ACM1</code> or <code>ACM2</code> etc.). If you don't see any device pop up, you can use <code>sudo dmesg</code> in a terminal to determine the name. Connect to it using a serial terminal. <code>minicom</code> is recommended for this (<code>sudo apt install minicom</code>):</p> <pre><code>minicom -D /dev/ttyUSB0 -C /tmp/capture.txt -b 115200\n</code></pre> <p>You should see the output you also see in the Web console. You can also look at <code>/tmp/capture.txt</code> in parallel to make sure the messages are captured there.</p>"},{"location":"firmware/howto/serial_console/#compiled-with-vscode","title":"Compiled with VSCode","text":"<p>If you are compiling the source by yourself using VS Code you can just press the \"Serial Monitor\" button in the status bar.</p> <p></p>"},{"location":"firmware/howto/upgrade_8mb/","title":"Upgrade to 2024.08.18 or newer","text":"<p>Upgrading from OpenDTU-OnBattery version 2024.06.03 or older to versions 2024.08.18 or newer requires physical access to the ESP32 board. The new firmware (factory image including new partition layout) must be written to flash using the board's USB connection. This is a one-time operation, and newer versions can again be upgraded over-the-air (OTA), unless you continue to use an ESP32 with 4 MB of flash memory. Writing the factory image will preserve the configuration (do not erase the flash beforehand, just write the factory firmware binary).</p>"},{"location":"firmware/howto/upgrade_8mb/#steps","title":"Steps","text":"<ol> <li>Download one backup of each your <code>config.json</code> and <code>pin_mapping.json</code>, see    Settings --&gt; Config Management in OpenDTU-OnBattery's web    application to prepare yourself if something should go wrong.</li> <li>Determine the firmware variant (PIO Environment) you are currently using,    see Info --&gt; System.</li> <li>Determine the new firmware variant to use for your device, see below.</li> <li>Flash the factory firmware image using the USB connection    of your board. Do not erase the whole flash memory beforehand. The flash    tool of your choice will only erase the parts of the flash memory that will    be overwritten.</li> <li>The update should be installed and your device should boot normally using    the new firmware and using the existing settings.</li> </ol>"},{"location":"firmware/howto/upgrade_8mb/#new-firmware-variant","title":"New Firmware Variant","text":"<p>Which firmware variant you should use going forward depends on your board (MCU type and amount of flash memory).</p> <p>In case you need to first determine how much flash memory is actually available on your board, install OpenDTU-OnBattery 2024.06.03 and navigate to Info --&gt; System in the web UI. It lists the flash memory size in section \"Hardware Information\".</p> <p></p>"},{"location":"firmware/howto/upgrade_8mb/#coming-from-generic-or-generic_esp32","title":"Coming from <code>generic</code> or <code>generic_esp32</code>","text":"<ul> <li>Use <code>generic_esp32_4mb_no_ota</code> if your ESP32 has only 4 MB of flash memory.   You will lose the ability to install OTA updates. Install future updates by   writing a new factory firmware image using the USB connection.</li> <li>Use <code>generic_esp32_8mb</code> if your ESP32 has at least 8 MB of flash memory.   Attempting to write this onto a device with 4 MB of flash results in a   bootloop.</li> </ul> <p>If you are coming from <code>generic</code> see the migration guide to configure the wiring to your NRF24 module. Going forward, there will be no pre-built firmware release with compiled-in pin mappings, i.e., there is no equivalent variant to <code>generic</code>.</p>"},{"location":"firmware/howto/upgrade_8mb/#coming-from-generic_esp32s3-or-generic_esp32s3_usb","title":"Coming from <code>generic_esp32s3</code> or <code>generic_esp32s3_usb</code>","text":"<p>The firmware is named the same, but it is now only compatible with devices having 8 MB or more of flash memory. Attempting to write this onto a device with 4 MB of flash results in a bootloop.</p> <p>If you are actually on an ESP32-S3 with 4 MB of flash (should be quite exotic) and need a matching firmware image, then open an issue. Similar to <code>generic_esp32_4mb_no_ota</code> there will be no support for OTA updates and you will have to upgrade using a wired connection going forward.</p>"},{"location":"firmware/howto/upgrade_8mb/#coming-from-another-variant","title":"Coming from Another Variant","text":"<p>As these variants are custom-build, you should know what you are doing. Variants for devices with only 4 MB of flash use the partition layout without OTA support. Other variants use the new layout for 8 MB of flash memory.</p>"},{"location":"firmware/howto/upgrade_8mb/#downgrading","title":"Downgrading","text":"<p>Configuration</p> <p>After downgrading, you should upload a configuration backup created before upgrading. Downgrading is not supported in general. Some settings might revert to default values after downgrading.</p> <p>4MB flash</p> <p>Dowgrading a device with 4MB of flash requires writing the older factory binary using a wired connection as changing the firmware over-the-air is not supported, neither for updates nor for downgrades.</p> <p>Once you installed a factory firmware binary (2024.08.18 or newer) using a wired connection, you may downgrade to an older version using the over-the-air mechanism. This works because the partition layout can now handle all released firmware sizes.</p>"},{"location":"firmware/howto/upgrade_8mb/#background","title":"Background","text":"<p>To accomodate a larger firmware binary, the ESP32 flash memory partition layout changed with the release of OpenDTU-OnBattery version 2024.08.18. All firmware released since then uses this new partition layout. Firmware variants <code>generic</code> and <code>generic_esp32</code> are no longer available.</p> <p></p> <ul> <li>Partitions <code>otadata</code> and <code>nvs</code> are not drawn in this graph. They remain   unchanged.</li> <li>The <code>spiffs</code> partition was not moved in order to preserve the config and   pin mapping when upgrading. Factory firmware images include data up to and   including <code>app0</code>, i.e., when writing these images, the <code>spiffs</code> partition is   neither erased nor overwritten.</li> <li>Both older firmware partitions were merged, doubling the space available for   the first firmware partition <code>app0</code>.</li> <li>The second firmware partition <code>app1</code> starts after the <code>spiffs</code> partition and   has the same size as the first firmware partition <code>app0</code>.</li> <li>The whole partition layout now spans close to 8 MB of flash memory.</li> <li>ESP32 with 4 MB of flash memory using the <code>generic_esp32_4mb_no_ota</code> variant   use the same new layout except that there is no <code>app1</code> partition. This is why   there is no support for OTA updates when using this partition layout. This   layout does, however, fit 4 MB of flash while also accomodating more space   (the same amount as for devices with \u2265\u00a08 MB) for the firmware.</li> </ul> <p>See #1025 for more background information.</p>"},{"location":"firmware/howto/upgrade_8mb/#exception-for-esp32-s3","title":"Exception for ESP32-S3","text":"<p>You may flash the non-factory firmware image version 2024.08.18 or 2024.09.11 over-the-air onto an ESP32-S3 board, i.e., without updating the partition layout. This works as the firmware is slightly smaller for an ESP32-S3 as it is for an ESP32. Only the two releases listed above still fit the old partition layout for ESP32-S3. An attempt to write an image that is too large using OTA will fail gracefully. You will then need to upgrade the partition layout by flashing the factory image using the USB connection to continue upgrading.</p>"},{"location":"firmware/howto/upgrade_upstream/","title":"Upgrade from OpenDTU","text":"<p>In general, one can switch seamlessly from OpenDTU to OpenDTU-OnBattery, as the parts and features inherited from the upstream project are kept compatible. This is particularly true for the settings.</p> <p>However, when switching from OpenDTU to OpenDTU-OnBattery, performing an OTA update will fail, as the OpenDTU-OnBattery firmware images are too large to fit the upstream's partition layout. This project's partition layout for the ESP32 flash memory is therefore different from the upstream project as of version 2024.08.18. Follow the respective upgrade guide, which is also applicable when upgrading from OpenDTU to OpenDTU-OnBattery.</p> <p>In case you want to switch back to OpenDTU (without losing settings), you may do so by</p> <ul> <li>performing an OTA update using the respective OpenDTU (non-factory) firmware   binary (unless you are using an OpenDTU-OnBattery variant without OTA   support).</li> <li>writing the OpenDTU factory image suitable for your board using a USB   connection.</li> </ul>"},{"location":"hardware/","title":"Getting Started","text":"<p>OpenDTU-OnBattery supports the ESP32 family of microcontrollers. ESP32-S3 chips are preferred.</p> <p>Flash Memory</p> <p>Due to the growing size of the firmware images, ESP32(-S3) boards with a minimum of 8 MB of flash memory are required in order to utilize over-the-air firmware updates. Most ESP32 boards provide only 4 MB of flash memory.</p> <p>Depending on the inverter to be addressed, different RF modules are required.</p> <ul> <li>The HM series requires the NRF24L01+ module</li> <li>The HMS/HMT series requires the CMT2300A module</li> </ul> <p>Please see the inverter overview to see if your inverter is supported and to determine the required RF module.</p> <p>For an easy start, acquire an OpenDTU Fusion board.</p>"},{"location":"hardware/#steps-to-build-your-own-dtu","title":"Steps to build your own DTU","text":"<p>Use of GPIOs</p> <p>In general, ESP32 chips allow to use any function on any GPIO pin. There are a few restrictions, which are documented at the respective ESP32(-S3) DevKit subpages. Freely wire the logic pins between your ESP32(-S3) module and peripheral components. The important bit is to create and use a matching device profile.</p> <ol> <li>Determine the RF module(s) you need.</li> <li>Get an ESP32-S3 board.</li> <li>Use a power suppy with 5 V and 1 A. The USB cable connected to your    PC/Notebook may be powerful enough or may be not. Also the quality of the    used USB cable might have an impact.</li> <li>Wire the ESP32-S3 to the RF module(s).</li> <li>Wire a display (optional).</li> <li>Flash the firmware via USB.</li> <li>Create, upload, and select a matching device profile    which describes your hardware (or look at a profile first and connect the    logic pins accordingly).</li> </ol>"},{"location":"hardware/cmt2300a/","title":"CMT2300A Module","text":""},{"location":"hardware/cmt2300a/#technical-details","title":"Technical details","text":"Property Value Name CMT2300A Frequency 868MHz Product Info and Datasheet Link"},{"location":"hardware/cmt2300a/#description","title":"Description","text":"<p>The CMT2300A module is a 868MHz RF module. It is important to get a module which supports SPI communication. Currently only the EBYTE E49-900M20S is supported as a standalone module, or use the OpenDTU Fusion PCB instead.</p> <p>The CMT2300A uses 3-Wire half duplex SPI communication. Due to this fact it currently requires a separate SPI bus. If you want to run the CMT2300A module on the same ESP32 as a NRF24L01+ module or a PCD8544 display make sure you get an ESP32 which supports 2 SPI busses (use an ESP32-S3).</p> <p>Buy your hardware from a trusted source, at best from a dealer/online shop in your country where you have support and the right to return non-functional hardware. When you want to buy from Amazon, AliExpress, eBay etc., take note that there is a lot of low-quality or fake hardware offered. Read customer comments and ratings carefully!</p> <p>A heavily incomplete list of shops is:</p> <p>Affiliation</p> <p>This list is for your convenience only, the project is not related to any of these shops.</p> <ul> <li>EBYTE E49-900M20S</li> <li>Antenna</li> <li>Blinkyparts (incl. breakout board)</li> </ul>"},{"location":"hardware/cmt2300a/#pictures","title":"Pictures","text":"<p>CMT2300a module</p>"},{"location":"hardware/cmt2300a/#pin-assignment","title":"Pin assignment","text":"<p>The actual pins used to connect the CMT2300A module to the ESP32 module are configured using a Device Profile.</p> Name in Device Profile Pin Function Description Possible name(s) on PCB sdio Digital Input/Output SPI Data Input/Output SDIO clk Digital Input SPI Clock SCLK cs Digital Input SPI register accesser CSB fcs Digital Input SPI FIFO accesser FCSB gpio2 Digital Output Interrupt pin GPIO2 gpio3 Digital Output Interrupt pin GPIO3 Power Power Supply (1,8V - 3.6V) VDD, VCC Power Ground VSS, GND"},{"location":"hardware/display/","title":"Displays","text":"<p>OpenDTU-OnBattery currently supports different types of displays (see below). Currently only displays with a resolution of 128x64 pixel are supported. To activate a display you have to specify it's type and pin assignment in a device profile.</p>"},{"location":"hardware/display/#display-settings","title":"Display Settings","text":"<p>Display settings can also be found in the Device Manager.</p>"},{"location":"hardware/display/#supported-models","title":"Supported Models","text":""},{"location":"hardware/display/#lcd-display-pcd8544","title":"LCD Display PCD8544","text":"<ul> <li>Size: 2,7\"</li> <li>Resolution: 84x48 pixel</li> <li>Supported bus: SPI</li> <li> <p>Type = 1</p> <p></p> </li> </ul>"},{"location":"hardware/display/#oled-display-ssd1306","title":"OLED Display SSD1306","text":"<ul> <li>Size: 0,96\"</li> <li>Resolution: 128x64 pixel</li> <li>Supported bus: I\u00b2C</li> <li> <p>Type = 2</p> <p></p> </li> </ul>"},{"location":"hardware/display/#oled-display-sh1106","title":"OLED Display SH1106","text":"<ul> <li>Size: 1,3\"</li> <li>Resolution: 128x64 pixel</li> <li>Supported bus: I\u00b2C</li> <li> <p>Type = 3</p> <p></p> </li> <li> <p>Size: 1,3\"</p> </li> <li>Resolution: 128x64 pixel</li> <li>Supported bus: I\u00b2C (Jumper modification/soldering on PCB SPI =&gt; I2C/IIC is necessary)</li> <li> <p>Type = 3</p> <p></p> </li> </ul>"},{"location":"hardware/display/#oled-display-ssd1309","title":"OLED Display SSD1309","text":"<ul> <li>Size: 2,42\"</li> <li>Resolution: 128x64 pixel</li> <li>Supported bus: I\u00b2C</li> <li> <p>Type = 4</p> <p></p> </li> </ul>"},{"location":"hardware/display/#lcd-display-st7567s-gm12864-59n","title":"LCD Display ST7567S GM12864-59N","text":"<ul> <li>Size: 2,1\"</li> <li>Resolution: 128x64 pixel</li> <li>Supported bus: I\u00b2C</li> <li>Type = 5</li> <li> <p>Datasheet: link</p> <p></p> </li> </ul> <p>Note</p> <p>Due to the schematic of the display, it is not possible to turn off the backlight.</p>"},{"location":"hardware/esp32nodemcu_38pin/","title":"ESP32 NodeMCU 38 pin","text":"<p>Flash Memory</p> <p>Get a version with at least 8 MB of flash memory to be able to use OTA updates.</p> <p>UART0</p> <p>Do NOT connect a peripheral to UART0 (GPIO1, GPIO3). UART0 is used by the ESP32's bootloader and by the firmware to print messages.</p> <p>Input-Only Pins</p> <p>Pins GPIO 34, 35, 36, and 39 are input-only pins and cannot be used as outputs. If you are not sure what that means, do not use these pins at all.</p> <p>To use this board please refer to the Device Profile called <code>nodemcu_esp32.json</code> or <code>blinkyparts_esp32.json</code>. Both are nicely compatible with the dev board. Open the JSON file with a text editor and have a look at the specific pin numbers.</p>"},{"location":"hardware/esp32nodemcu_38pin/#schematic","title":"Schematic","text":""},{"location":"hardware/esp32nodemcu_38pin/#symbolic-view","title":"Symbolic View","text":""},{"location":"hardware/esp32s3_devkit/","title":"ESP32-S3 DevKit","text":"<p>These boards are generally a good choice to run OpenDTU-OnBattery if you aspire to assemble your own hardware components. Have a look at the user guide.</p> <p>Flash Memory</p> <p>The original boards by Espressif as well as the imitations should all have at least 8 MB of flash memory, making it possible to use OTA updates.</p> <p>Reserved Pins</p> <p>ESP32-S3 modules with 8 MB of PSRAM use an octal SPI interface. On these modules, pins GPIO 35, 36, and 37, which are usually wired to the board's pin header, are in use for the internal communication between ESP32-S3 and PSRAM. Therefore, these pins are not available for external use, even though they are wired to the board's pin header.</p> <p>Avoid UART0</p> <p>Avoid using UART0 (GPIO43, GPIO44) to connect a peripheral, as it is reserved for the bootloader.</p>"},{"location":"hardware/esp32s3_devkit/#overview","title":"Overview","text":"<p>The following is an overview of the original Espressif ESP32-S3 DevKit (USB-C version) board. Many boards offered on well-known larger Chinese or local web stores are usually merely compatible imitations.</p> <p></p>"},{"location":"hardware/esp32s3_devkit/#firmware","title":"Firmware","text":"<p>Use variant <code>generic_esp32s3_usb</code> on these boards. Three hardware UARTs will be available. Console messages will appear on the USB connector which is wired to the native USB stack of the ESP32-S3.</p>"},{"location":"hardware/inverter_overview/","title":"Inverter Overview","text":"<p>TSUN compatibility remark</p> <p>Compatibility with OpenDTU-OnBattery is most likely related to the serial number of the inverter. Current findings indicate that TSUN inverters with a serial number starting with \"11\" are supported, whereby TSUN inverters with a serial number starting with \"10\" are not.</p> <p>Hoymiles HMS-xxxx-xT-NA compatibility remark</p> <p>You have to change the Country/Region in the DTU settings.</p> <p>Inverters with integrated Wi-Fi NOT supported</p> <p>No inverter with integrated Wi-Fi (identify by the \"W\" in the name (e.g. HMS-xxxW)) are supported by OpenDTU-OnBattery.</p> Model Required RF Module DC Inputs MPP-Tracker AC Phases Serial Prefix Hoymiles HM-300-1T NRF24L01+ 1 1 1 <code>1121</code> Hoymiles HM-350-1T NRF24L01+ 1 1 1 <code>1121</code> Hoymiles HM-400-1T NRF24L01+ 1 1 1 <code>1121</code> Hoymiles HM-600-2T NRF24L01+ 2 2 1 <code>1141</code> Hoymiles HM-700-2T NRF24L01+ 2 2 1 <code>1141</code> Hoymiles HM-800-2T NRF24L01+ 2 2 1 <code>1141</code> Hoymiles HM-1000-4T NRF24L01+ 4 2 1 <code>1161</code> Hoymiles HM-1200-4T NRF24L01+ 4 2 1 <code>1161</code> Hoymiles HM-1500-4T NRF24L01+ 4 2 1 <code>1161</code> Hoymiles HMS-300-1T CMT2300A 1 1 1 <code>1124</code> Hoymiles HMS-350-1T CMT2300A 1 1 1 <code>1124</code> Hoymiles HMS-400-1T CMT2300A 1 1 1 <code>1124</code> Hoymiles HMS-400BM CMT2300A 1 1 1 <code>1124</code> Hoymiles HMS-450-1T CMT2300A 1 1 1 <code>1124</code> Hoymiles HMS-500-1T CMT2300A 1 1 1 <code>1124</code>, <code>1125</code> Hoymiles HMS-600-2T CMT2300A 2 2 1 <code>1143</code>, <code>1144</code>, <code>1410</code> Hoymiles HMS-700-2T CMT2300A 2 2 1 <code>1143</code>, <code>1144</code>, <code>1410</code> Hoymiles HMS-800-2T CMT2300A 2 2 1 <code>1143</code>, <code>1144</code>, <code>1410</code> Hoymiles HMS-900-2T CMT2300A 2 2 1 <code>1143</code>, <code>1144</code>, <code>1410</code> Hoymiles HMS-1000-2T CMT2300A 2 2 1 <code>1143</code>, <code>1144</code>, <code>1410</code> Hoymiles HMS-1600-4T CMT2300A 4 4 1 <code>1164</code> Hoymiles HMS-1800-4T CMT2300A 4 4 1 <code>1164</code> Hoymiles HMS-2000-4T CMT2300A 4 4 1 <code>1164</code> Hoymiles HMT-1600-4T CMT2300A 4 2 3 <code>1361</code> Hoymiles HMT-1800-4T CMT2300A 4 2 3 <code>1361</code> Hoymiles HMT-2000-4T CMT2300A 4 2 3 <code>1361</code> Hoymiles HMT-1800-6T CMT2300A 6 3 3 <code>1382</code> Hoymiles HMT-2250-6T CMT2300A 6 3 3 <code>1382</code> Solenso SOL-H350 NRF24L01+ 1 1 1 <code>1121</code> Solenso SOL-H400 NRF24L01+ 1 1 1 <code>1121</code> Solenso SOL-H800 NRF24L01+ 2 2 1 <code>1141</code> TSUN TSOL-M350 NRF24L01+ 1 1 1 <code>1121</code> TSUN TSOL-M800 NRF24L01+ 2 2 1 <code>1141</code> TSUN TSOL-M1600 NRF24L01+ 4 2 1 <code>1161</code> E-Star HERF-300 NRF24L01+ 1 1 1 <code>A210</code>-&gt;<code>2841</code> E-Star HERF-800 NRF24L01+ 2 2 1 <code>A110</code>-&gt;<code>2821</code> E-Star HERF-1600 NRF24L01+ 4 2 1 <code>A010</code>-&gt;<code>2801</code> E-Star HERF-1800 NRF24L01+ 4 2 1 <code>A010</code>-&gt;<code>2801</code>"},{"location":"hardware/limitations/","title":"ESP32 Hardware Limitations","text":""},{"location":"hardware/limitations/#hardware-uarts","title":"Hardware UARTs","text":""},{"location":"hardware/limitations/#amount","title":"Amount","text":"<p>Depending on the ESP32 you use and depending on the firmware variant, either two or three hardware UARTs are available.</p> MCU Firmware UARTs ESP32 any 2 ESP32-S3 <code>generic_esp32s3</code> 2 ESP32-S3 <code>generic_esp32s3_usb</code> 3 <p>The ESP32 has three hardware UART controllers. On ESP32, the first controller is always reserved for the serial console. This is also the case for ESP32-S3 chips, if the firmware variant uses the first port for the serial console. Only on ESP32-S3, which has a native USB port, and only if that USB port is used to transport the serial console messages instead (determined by a compile-time switch), three hardware UARTs are available.</p>"},{"location":"hardware/limitations/#users","title":"Users","text":"<p>The following features/peripherals currently require a hardware UART:</p> <ol> <li>Victron charge controllers</li> <li>Victron SmartShunts</li> <li>JK BMS</li> </ol>"},{"location":"hardware/limitations/#serial-port-manager","title":"Serial Port Manager","text":"<p>All features that need a hardware UART request access to one from the serial port manager. Requests are made in the same order as the hardware UART users are listed above. The serial port manager allows to use the available hardware UARTs freely, without risking conflicts due to hard-coded controllers. However, once all hardware UARTs are occupied, features/peripherals requiring a hardware UART will fail to initialize. Have a look at the output on the serial console when booting to know how hardware UARTs are assigned.</p>"},{"location":"hardware/limitations/#using-uart0","title":"Using UART0","text":"<p>In general, avoid using UART0 to connect peripherals.</p> <ul> <li>On ESP32, GPIO1 and GPIO3 are in use by UART0.</li> <li>On ESP32-S3, GPIO43 and GPIO44 are in use by UART0.</li> </ul>"},{"location":"hardware/limitations/#bootloader-interaction","title":"Bootloader Interaction","text":"<p>Connecting a peripheral to UART0 of your ESP32 can break interaction with the bootloader. The bootloader uses UART0 to communicate with the flash tool. A peripheral connected to UART0 might therefore interfere in the communication with the bootloader, preventing writing to the flash memory over USB in particular.</p> <ul> <li>On ESP32 boards, UART0 is connected to the USB-UART bridge.</li> <li>On ESP32-S3 boards with multiple USB ports, the port connected to the   USB-UART bridge on the USB side is connected to UART0 on the UART side   of the bridge.</li> </ul>"},{"location":"hardware/limitations/#bootloader-output","title":"Bootloader Output","text":"<p>The ESP32's bootloader will print messages on UART0 on every boot. If a peripheral is connected to UART0, this peripheral will receive these messages. If the peripheral is not robust against invalid messages and, depending on the baud rate, invalid UART chararacters, it may cease to function properly.</p>"},{"location":"hardware/limitations/#firmware-messages","title":"Firmware Messages","text":"<p>OpenDTU-OnBattery uses UART0 to print messages. These are the same messages appearing in the web console, except that connecting to UART0 allows to read messages even while the firmware is still booting and not yet connected to the network.</p> <p>On ESP32-S3 using firmware variant <code>generic_esp32s3_usb</code> (all environments that define <code>ARDUINO_USB_MODE=1</code> and <code>ARDUINO_USB_CDC_ON_BOOT=1</code>), the messages are instead available on the virtual serial interface of the native USB connection.</p>"},{"location":"hardware/limitations/#spi-busses","title":"SPI Busses","text":"<p>ESP32 and ESP32-S3 chips provide four seperate SPI interfaces. Two of them are reserved for communicating with the flash and/or PSRAM. The remaining two are free to use for peripherals. This means only two SPI peripherals can be connected at a time. The following peripherals need an SPI bus each:</p> <ul> <li>NRF24 radio module</li> <li>CMT2300 radio module</li> <li>Huawei CAN interface</li> <li>Some diplays</li> </ul>"},{"location":"hardware/nrf24l01plus/","title":"NRF24L01 Module","text":""},{"location":"hardware/nrf24l01plus/#technical-details","title":"Technical details","text":"Property Value Name nRF24L01+ Frequency 2.4GHz Datasheet Link"},{"location":"hardware/nrf24l01plus/#description","title":"Description","text":"<p>The NRF24L01+ module is a 2,4GHz RF module. It is absolutly important to get the newer PLUS variant! Only the PLUS variant supports the required transmission speeds and is able to communicate with the inverter. There are several variants with different qualities and prices. Most of them are pin compatible. A noteable brand name is e.g. EBYTE ML01DP5. It includes a proper shielding and integrated capacitors.</p> <p>Buy your hardware from a trusted source, at best from a dealer/online shop in your country where you have support and the right to return non-functional hardware. When you want to buy from Amazon, AliExpress, eBay etc., take note that there is a lot of low-quality or fake hardware offered. Read customer comments and ratings carefully!</p> <p>A heavily incomplete list of trusted hardware shops in Germany:</p> <p>Affiliation</p> <p>This list is for your convenience only, the project is not related to any of these shops.</p> <ul> <li>AZ-Delivery</li> <li>Makershop</li> <li>Berrybase</li> </ul>"},{"location":"hardware/nrf24l01plus/#pictures","title":"Pictures","text":"<p>EBYTE ML01DP5 module</p> <p> </p> <p>Generic nRF24L01+ Module with PCB antenna</p> <p> </p> <p>Generic nRF24L01+ Module with SMA antenna</p>"},{"location":"hardware/nrf24l01plus/#pin-assignment","title":"Pin assignment","text":"<p>The actual pins used to connect the nRF24L01+ module to the ESP32 module are configured using a Device Profile.</p> Name in Device Profile Pin Function Description Possible name(s) on PCB miso Digital Output SPI Slave Data Output MISO mosi Digital Input SPI Slave Data Input MOSI clk Digital Input SPI Clock CLK, SCK irq Digital Output Interrupt pin IRQ en Digital Input Chip Enable EN, CE cs Digital Input SPI Chip Select CS, CSN Power Power Supply (1,9V - 3.6V) VDD, VCC Power Ground VSS, GND"},{"location":"hardware/olimexpoeiso/","title":"Olimex ESP32-POE-ISO","text":"<p>Flash Memory</p> <p>Get a version with at least 8 MB of flash memory to be able to use OTA updates.</p>"},{"location":"hardware/olimexpoeiso/#technical-details","title":"Technical details","text":"Property Value Name Olimex ESP32-POE-ISO Product Info Link"},{"location":"hardware/olimexpoeiso/#description","title":"Description","text":"<p>To use this board please refer to the Device Profile called <code>olimex_esp32_poe.json</code>. Depending on the features (LEDs) or display type you need you can easily adjust the existing config. Open the JSON file with a text editor and have a look at the specific pin numbers.</p>"},{"location":"hardware/olimexpoeiso/#schematic","title":"Schematic","text":""},{"location":"hardware/olimexpoeiso/#symbolic-view","title":"Symbolic View","text":""},{"location":"hardware/recommendations/","title":"Selecting a Board","text":""},{"location":"hardware/recommendations/#tldr","title":"TL;DR","text":"<p>If you insist on wiring up the hardware yourself instead of using an integrated solution, acquire an ESP32-S3 DevKit Board with a <code>N16R2</code> type of module.</p>"},{"location":"hardware/recommendations/#definitions-and-background","title":"Definitions and Background","text":"<ul> <li>There are variants of the ESP32 series other than <code>ESP32</code> and <code>ESP32-S3</code>.   OpenDTU-OnBattery is mostly concerned with the aforementioned two types.</li> <li> Chip or MCU or SoC: Refers to the ESP32(-S3) silicon chip in a   plastic package without any PCB or external components.<ul> <li>This part determines whether you are using an <code>ESP32</code> or an <code>ESP32-S3</code>.</li> <li>Example part numbers: <code>ESP32-U4WDH</code>, <code>ESP32-S3</code>, <code>ESP32-S3R2</code>, or   <code>ESP32-S3FH4R2</code>.</li> <li>Some chips have integrated flash and/or PSRAM, while others do not.</li> <li>Details can be found in the ESP32 datasheet, ESP32-S3   datasheet, or even the ESP32-S3 Technical Reference Manual.</li> <li>These parts are manufactured by Espressif.</li> <li>A popular cosumer product integrating these chips directly are Shelly   devices.</li> </ul> </li> <li> Module: Refers to an assembled part consisting of an ESP32(-S3) chip and   external components, soldered onto a PCB, and hidden under an RF shield.<ul> <li>Example part numbers: <code>ESP32-WROOM-32U</code>, <code>ESP32-S3-WROOM-1-N4</code>, or   <code>ESP32-S3-WROOM-2-N16R8V</code>.</li> <li>Many modules add SPI flash memory and/or PSRAM, which are external to the   SoC.</li> <li>Details can be found in the respective datasheets (non-exhaustive list):   ESP32-WROOM-32, ESP32-WROOM-32D/U, ESP32-S3-WROOM-1, or   ESP32-S3-WROOM-2.</li> <li>These modules are orginally manufactured by Espressif, but there are   compatible knock-off products advertised under identical part numbers.</li> <li>Using these modules simplifies integration into custom applications.   Popular consumer products using these modules are ESP32-based relay   boards.</li> </ul> </li> <li> Board or PCB: Refers to the PCB which integrates an ESP32(-S3) module   with a power supply, USB connector(s), pin headers, and more components to   facilitate practical use of the module.<ul> <li>Example parts: <code>ESP32-DevKitC</code>, <code>ESP32-S3-DevKitC-1</code>, OpenDTU   Fusion.</li> <li>Espressif originally manufactured the aforementioned development kits,   which became a de facto standard for hobbyists. Third party manufacturers   sell compatible boards using identical names.</li> </ul> </li> </ul>"},{"location":"hardware/recommendations/#flash-memory","title":"Flash Memory","text":"<p>Due to the growing size of the firmware binaries, an ESP32 module with at least 8 MB of flash memory is required to be able to use OTA updates. You may run OpenDTU-OnBattery on ESP32-based boards with only 4 MB of flash memory, but you will have to update the firmware on these boards using the USB connection, i.e., physical access is required.</p>"},{"location":"hardware/recommendations/#esp32-vs-esp32-s3","title":"ESP32 vs. ESP32-S3","text":"<p>You should prefer an ESP32-S3 (note the \"S3\"). The ESP32-S3 has more GPIOs (not all may be pinned out) and a slightly more efficient core. More importantly, it has native USB support, freeing one hardware UART.</p>"},{"location":"hardware/recommendations/#esp32-s3-board","title":"ESP32-S3 Board","text":"<p>ESP32-S3 Reserved Pins</p> <p>ESP32-S3 modules with 8 MB of PSRAM use an octal SPI interface. On these modules, pins GPIO 35, 36, and 37, which are usually wired to the board's pin header, are in use for the internal communication between ESP32-S3 and PSRAM. Therefore, these pins are not available for external use, even though they are wired to the board's pin header.</p> <p>Use a board which integrates one of the following modules:</p> ESP32-S3-WROOM-... Flash PSRAM Antenna ...1U-N16R8 16 MB 8 MB external ...1-N16R8 16 MB 8 MB PCB Trace ...1U-N16R2 16 MB 2 MB external ...1-N16R2 16 MB 2 MB PCB Trace ...1U-N16 16 MB - external ...1-N16 16 MB - PCB Trace ...1U-N8R8 8 MB 8 MB external ...1-N8R8 8 MB 8 MB PCB Trace ...1U-N8R2 8 MB 2 MB external ...1-N8R2 8 MB 2 MB PCB Trace ...1U-N8 8 MB - external ...1-N8 8 MB - PCB Trace ...2-N16R8V 16 MB 8 MB PCB Trace ...2-N32R8V 32 MB 8 MB PCB Trace <p>Make sure that the board actually uses the native USB capability, such that the third hardware UART becomes available. There are boards with two USB connectors, where one connectnatively to the ESP32. In that case, the board is fine. On board with only one USB connector, look out for a USB to UART transceiver. If there is one on the board, the chip is possibly not connected natively to the USB port.</p>"},{"location":"hardware/recommendations/#16-mb-of-flash-memory","title":"16 MB of Flash Memory","text":"<p>You will not be able to leverage 16 MB of flash memory with OpenDTU-OnBattery any time soon. However, given the price difference, you might want to go for a version with 16 MB, allowing the module/board to be reused in a different project eventually.</p> <p></p>"},{"location":"hardware/vedirect/","title":"VE.Direct Interface","text":""},{"location":"hardware/vedirect/#use-cases","title":"Use Cases","text":"<p>OpenDTU-OnBattery supports reading and interpreting unsolicited status messages sent by VE.Direct-compatible devices. This currently includes Victron MPPT charge controllers and Victron SmartShunts. These devices send data in fixed intervals (1s for MPPT charge controllers with recent firmware) using a 5V or 3.3V serial UART.</p> <p>Since OpenDTU-OnBattery version 2024.05.03 there is also support to send data to the VE.Direct device to query additional information.</p>"},{"location":"hardware/vedirect/#vedirect-design","title":"VE.Direct Design","text":""},{"location":"hardware/vedirect/#protocol-variants","title":"Protocol Variants","text":"<p>Victron VE.Direct devices support two protocols.</p>"},{"location":"hardware/vedirect/#text-mode","title":"TEXT-Mode","text":"<p>OpenDTU-OnBattery supports interpretation of TEXT-Mode messages. The VE.Direct device will periodically transmit data fields using this mode.</p> <p>To receive TEXT-Mode messages</p> <ul> <li>an ESP32 pin must be connected to the TX line of the device's VE.Direct port.</li> <li>that pin must be configured in the device   profile as the RX pin (receive data from   VE.Direct device).</li> </ul>"},{"location":"hardware/vedirect/#hex-mode","title":"HEX-Mode","text":"<p>Since OpenDTU-OnBattery version 2024.05.03 there is support for sending and interpreting HEX-Mode messages. HEX-Mode allows to read additional data fields unavailable when listening for TEXT-Mode messages only, e.g., MPPT charger internal temperature or VE.Smart network total power.</p> <p>To allow querying HEX-Mode data fields, the TEXT-Mode requirements above must be met, as well as</p> <ul> <li>an ESP32 pin must be connected to the RX line of the device's VE.Direct port.</li> <li>that pin must be configured in the device   profile as the TX pin (transmit data to   VE.Direct device).</li> <li>the MPPT firmware must be at least version 1.53 or higher.</li> </ul> <p>Note</p> <p>Many Victron devices sent unsolicited messages in HEX-Mode alongside unsolicited TEXT-Mode messages. Those messages are processed if their type is known, or gracefully ignored otherwise.</p>"},{"location":"hardware/vedirect/#point-to-point","title":"Point-to-Point","text":"<p>VE.Direct uses a point-to-point communication scheme. This means each and every device one wants to communicate with using OpenDTU-OnBattery needs its own communication channel, both regarding the wiring and the need for a separate pin and UART on the ESP32.</p>"},{"location":"hardware/vedirect/#vedirect-physical-interface","title":"VE.Direct Physical Interface","text":"<p>The VE.Direct socket on the Victron device is male and is comprised of four pins, which are assigned as follows:</p> <p></p> <p>VE.Direct VCC</p> <p>The power pin of the Victron device must not be used to drive loads. It can only supply around 10mA, according to the FAQ.</p> <p>The ESP32 on your OpenDTU-OnBattery is a data consumer, and the data producer is the respective Victron device.</p> <p>Since the Victron device sends data unsolicited, you can optionally leave the Victron RX pin unconnected. In this case you will not be able to query additional data fields or use advanced features that require HEX-Mode communication.</p>"},{"location":"hardware/vedirect/#cables","title":"Cables","text":"<p>The pin header is an off-the-shelf JST PH 2.0 4-pin header, often called \"4Pin MiniMicro JST 2.0 PH\". After some research you may be able to source just the plug. It might be easier to buy an original VE.Direct cable, slice the cable, and wire its individual wires up to the ESP32.</p> <p>VE.Direct cable colors</p> <p>Beware that the wire colors in VE.Direct cables may be misleading: Red might be GND, black might be VCC, and the other two change their meaning on one end of the cable versus the other end, as the cable is a \"cross-over\" cable. Test each wire and confirm to which pin it connects, e.g., using a multimeter.</p>"},{"location":"hardware/vedirect/#wiring-methods","title":"Wiring Methods","text":"<p>There are multiple options to wire the ESP32 running OpenDTU-OnBattery to a VE.Direct data producer. The wiring is not straight-forward as many Victron devices use 5V logic levels, while the ESP32 uses 3.3V logic levels.</p>"},{"location":"hardware/vedirect/#adum1201-safest-most-preferred","title":"ADUM1201 (safest, most preferred)","text":"<p>The safest and most reliable option is to use a breakout board with an Analog Devices ADUM1201 chip on it. That chip is a digital isolator, which internally uses magnetic coupling to transfer information from one voltage domain to the other.</p> <p>OpenDTU Fusion Add-On</p> <p>The OpenDTU Fusion CAN/Iso shield integrates two of these chips to connect up to two serial devices.</p> <p>The terminals of your breakout board should be clearly marked and probably resemble the names in this functional block diagram of the chip:</p> <p></p> <p>Connect <code>VDD1</code> and <code>GND1</code> to the VE.Direct data producer (\"left\" voltage domain of the chip). Connect VE.Direct <code>TX</code> (an output) to the input of the \"left\" voltage domain of the chip, i.e., <code>VIB</code>. Optional: Connect VE.Direct <code>RX</code> (an input) to the output of the \"left\" voltage domain of the chip, i.e., <code>VOA</code>.</p> <p>Connect <code>VDD2</code> and <code>GND2</code> to the ESP32 3.3V supply (\"right\" voltage domain of the chip). Connect the output of the \"right\" voltage domain to a GPIO of the ESP32, which will be mapped as the (Victron or Battery) <code>RX</code> pin in the device profile. It is okay to choose a pin that only works as an input. Optionally: Connect the input of the \"right\" voltage domain to a GPIO of the ESP32, which will be mapped as the (Victron or Battery) <code>TX</code> pin.</p> <p>Even if the voltage domains turn out to be the same, this chip will protect the devices from one another, in case a higher voltage than expected is encountered on any of the pins.</p>"},{"location":"hardware/vedirect/#level-shifter-safe","title":"Level-Shifter (safe)","text":"<p>Using a MOSFET and its parasitic diode, a level-shifter can be assembled. This solution is less integrated and the respective boards usually take up more space, especially if they provide four or more channels. Also, these level-shifters will only work with the higher voltage domain on the correct \"side\" of the circuit. They might fail to work reliably if the voltage domains are the same.</p> <p>The wiring setup depends on your particular breakout board. Connect the VE.Direct <code>TX</code> pin through the level-shifter with one of the ESP32 pins. Remember to wire <code>GND</code> as well as the positive supply voltage of the VE.Direct data producer and the ESP32, both at the respective \"side\" of the circuit.</p>"},{"location":"hardware/vedirect/#direct-simplest-least-preferred","title":"Direct (simplest, least preferred)","text":"<ul> <li>Connect VE.Direct <code>TX</code> to an unused ESP32 GPIO pin. This may be an input-only   pin. Configure it in the pin mapping as (Victron or Battery) <code>RX</code>.</li> <li>Connect <code>GND</code> between the two devices.</li> </ul> <p>This works even if your VE.Direct data producer uses 5V logic levels since the ESP32 seems to tolerate 5V at its GPIOs. Note that this is not stated in the datasheet, but it was communicated at some point by Espressif. Use the Internet search engine of your choice to find respective statements. Be prepared that newer iterations of the ESP32 may not be 5V-tolerant without notice.</p>"},{"location":"hardware/victron_charge_controllers/","title":"Victron Charge Controllers","text":"<p>Victron SmartSolar and BlueSolar charge controllers can be connected to OpenDTU-OnBattery using the VE.Direct interface.</p> <p>This allows OpenDTU-OnBattery to</p> <ul> <li>read data from the charge controller</li> <li>display the data in the web UI</li> <li>publish the data to the MQTT broker</li> <li>and make the data auto-discoverable in HomeAssistent.</li> </ul> <p>Additionally, knowing the amount of solar power currently being produced, can be leveraged by the Dynamic Power Limiter to implement (Full) Solar-Passthrough. This feature allows to set the limit of the inverter such that it uses the available solar power to generate AC power directly, i.e., without storing it in the battery just so that it can be discharged later.</p>"},{"location":"hardware/victron_charge_controllers/#retrieve-data","title":"Retrieve Data","text":"<p>Each charge controller whose data shall be processed must be connected to OpenDTU-OnBattery using the VE.Direct interface, i.e., one wired connection each.</p> <p>For every connected charge controller, the ESP32 currently must use a hardware UART. This limits the amount of charge controllers that can be connected to one ESP32 with OpenDTU-OnBattery to either two or three, see limitations.</p> <p>To start processing messages from a charge controller, enable the VE.Direct interface in the web UI. Additionally, define up to three charge controllers in the device profile.</p>"},{"location":"hardware/victron_charge_controllers/#vesmart-network","title":"VE.Smart Network","text":"<p>In case only one or only a subset of all available charge controllers in the system can be connected to OpenDTU-OnBattery, you may want to determine the total solar production so that the Dynamic Power Limiter (Full) Solar-Passthrough feature works as expected.</p> <p>To do so,</p> <ul> <li>configure all charge controllers to be part of the same VE.Smart Bluetooth network.</li> <li>connect the receive pin of the charge controller with a transmit (TX) pin on the ESP32.</li> <li>configure the transmit pin in the device profile.</li> </ul> <p>This setup allows OpenDTU-OnBattery to query the \"VE.Smart network total power\" using a HEX-Mode message. This value, if available, is then preferred to determine the available solar power.</p>"},{"location":"hardware/jkbms/","title":"Introduction","text":"<p>This project supports communication with a JK BMS using a wired medium. Parameters are polled at customizable intervals and displayed in the Web UI as well as published to the MQTT broker.</p> <p></p> <p>These models are supported:</p> <ol> <li>JK-B* Models</li> <li>JK-PB* Models (new style Inverter-BMS)</li> </ol> <p>Refer to the JK BMS battery settings documentation for configuration options (all models).</p>"},{"location":"hardware/jkbms/models_b/","title":"JK-B* Models","text":"<p>The support for JK BMS was developed and testest against a <code>JK-B1A24S15P</code> model. It is assumed that all JK BMS (in this series) implement the same protocol on their UART interface. The following models are listed in a manual that includes the tested model:</p> <pre><code>JK-BD6AxxS-6P  / JK-BD6AxxS-8P\nJK-BD6AxxS-10P / JK-BD6AxxS-15P\nJK-BD6AxxS-20P / JK-B1AxxS-15P\nJK-B2AxxS-15P  / JK-B2AxxS-20P\n</code></pre> <p>Notice that buying the BMS with the CAN interface or the GPS feature might conflict with this UART interface.</p>"},{"location":"hardware/jkbms/models_b/#protocols","title":"Protocols","text":"<p>The <code>JK-B*</code> BMS models are connected to the ESP32 using UART-TTL or RS485 using the JK RS485 adapter:</p> <p></p>"},{"location":"hardware/jkbms/models_b/#rs485-ttl-uart-jack-pin-out","title":"RS485-TTL (UART) Jack Pin-Out","text":"<p>This is the pinout of the RS485-TTL (UART) communication jack on an JK BMS (4 Pin, JST SH 1.25mm pitch), which is labeled \"GPS\":</p> <pre><code>\u250c\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2510\n\u2502                 \u2502\n\u2502  O   O   O   O  \u2502\n\u2502 GND  RX  TX VBAT\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502   \u2502   \u2502   \u2514\u2500\u2500 VBAT is full battery voltage, e.g., 51.2V (do not connect)\n   \u2502   \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500 ESP32 GPIO (RX pin)\n   \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 ESP32 GPIO (TX pin)\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 GND\n</code></pre> <p></p> <p>Reversed UART connector</p> <p>On the JK-B1A8S10P/B1A8S20P/B2A8S10P models (possibly others?) the connector is soldered on the PCB top side rather than the bottom side, so the pin-out above is to be read upside-down! Be cautious with the connector's orientation on your particular model!</p> <p></p>"},{"location":"hardware/jkbms/models_b/#wiring-options","title":"Wiring Options","text":"<p>Multiple wiring methods are supported. The <code>battery.rx</code> and <code>battery.tx</code> pins must be defined in the pin mapping for all methods. When using the <code>RS-485 Transceiver on MCU</code> interface type, <code>battery.rxen</code> and <code>battery.txen</code> pins must also be defined. See the device profile documentation for more details.</p>"},{"location":"hardware/jkbms/models_b/#rs485-with-transceiver","title":"RS485 with Transceiver","text":"<p>Using the original JK BMS RS485 adapter, the wiring can be completed using an RS485 transceiver chip that is connected to the ESP32 directly. This is the case for the OpenDTU Fusion board, where an ISL3178E transceiver is in use. There are also breakout-boards available that provide a RS485 transceiver (search for <code>MAX485 Module</code>).</p> <p>This setup is very robust and requires four pins on the ESP32: Two for data (one input, one output), one that controls the receiver, and another that controls the transmitter. The latter two are outputs.</p> <pre><code>          RS485-TTL               RS485\n                                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502        \u2502&lt;--TX---&gt;\u2502Y    JK   Y\u2502&lt;A--+--A&gt;\u2502A      RXEN\u2502&lt;-&gt;\u250215     \u2502 \u2502\n\u2502 JK-BMS \u2502&lt;--RX---&gt;\u2502W  RS485  W\u2502&lt;B--+--B&gt;\u2502B        RX\u2502&lt;-&gt;\u250216 ESP \u2502 \u2502\n\u2502        \u2502&lt;--GND--&gt;\u2502B Adaptor  \u2502    \u2502    \u2502       TXEN\u2502&lt;-&gt;\u250246  32 \u2502 \u2502\n\u2502        \u2502&lt;-Bat V-&gt;\u2502R         B\u2502&lt;--&gt;\u2502GND \u2502ISL3178E EN\u2502&lt;-&gt;\u250245     \u2502 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n                                    \u2502       OpenDTU Fusion v2      \u2502\n                                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Use the <code>RS485-Transceiver on MCU</code> interface type in the OpenDTU-OnBattery settings for this setup.</p>"},{"location":"hardware/jkbms/models_b/#rs485-with-converter","title":"RS485 with Converter","text":"<p>Using the original JK BMS RS485 adapter, the wiring can be completed using an RS485 to UART-TTL converter board. Search for <code>DEBO TTL-RS485</code> on reichelt.de for an example. For the UART receive pin on the ESP32 an input-only pin may be used.</p> <p>This setup also works over long distances for the RS485 lines.</p> <pre><code>           UART-TTL              RS485           RS485-TTL\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        \u2502&lt;--TX---&gt;\u2502Y    JK   Y\u2502&lt;A---A&gt;\u2502        \u2502&lt;TX---RX&gt;\u2502       \u2502\n\u2502 JK-BMS \u2502&lt;--RX---&gt;\u2502W  RS485  W\u2502&lt;B---B&gt;\u2502 RS485  \u2502&lt;RX---TX&gt;\u2502 ESP32 \u2502\n\u2502        \u2502&lt;--GND--&gt;\u2502B Adaptor B\u2502&lt;-GND-&gt;\u2502 to 3V3 \u2502&lt;--GND--&gt;\u2502       \u2502\n\u2502        \u2502&lt;-Bat V-&gt;\u2502R          \u2502       \u2502        \u2502&lt;--3V3--&gt;\u2502       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Use the <code>TTL-UART on MCU</code> interface type in the OpenDTU-OnBattery settings for this setup. The ESP32 will talk UART to the converter board. The RS485 transceiver is transparent to the ESP32. That also means it has no explicit control over the transmitter or receiver. That in turn might cause the ESP32 to read its own data (only for bad converter boards).</p>"},{"location":"hardware/jkbms/models_b/#uart-ttl","title":"UART-TTL","text":"<p>The BMS may be connected directly to two ESP32 pins. For the UART receive pin on the ESP32 an input-only pin may be used.</p> <p>VBAT</p> <p>Do NOT connect the fourth pin (VBAT) of the JK BMS, as it drives the unregulated full battery voltage.</p> <p>Interference</p> <p>Use this setup only over short distances as it is not robust against interference.</p> <pre><code>          UART-TTL\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        \u2502&lt;TX---RX&gt;\u2502       \u2502\n\u2502 JK-BMS \u2502&lt;RX---TX&gt;\u2502 ESP32 \u2502\n\u2502        \u2502&lt;--GND--&gt;\u2502       \u2502\n\u2502        \u2502   3V3--&gt;\u2502       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Use the <code>TTL-UART on MCU</code> interface type in the OpenDTU-OnBattery settings for this setup.</p>"},{"location":"hardware/jkbms/models_pb/","title":"JK-PB* Models (Inverter-BMS)","text":"<p>The new-style Inverter BMS <code>JK-PBxAxxSxxP</code> are also supported (tested hardware v15 and Firmware v15.10).</p> <p>Non-exhaustive list of improvements on Inverter BMS compared to older models:</p> <ul> <li>support for firmware upgrades (Windows utility)</li> <li>programmable dry contacts (relay switches)</li> <li>voltage settings for 0% and 100% SoC (also available on older models, but   only if they were shipped with newer firmware (depends on the date of   purchase))</li> <li>to be explored: Modbus-compatible RS485 communication, which carries much   more settings and more info than the existing serial protocol</li> </ul>"},{"location":"hardware/jkbms/models_pb/#protocol","title":"Protocol","text":"<p>These models must be configured to use Protocol <code>000 - 4G-GPS Remote module Common protocol V4.2</code> as <code>UART1 Protocol</code> using the Bluetooth App or Windows Software.</p> <p></p>"},{"location":"hardware/jkbms/models_pb/#rj45-connector","title":"RJ45 Connector","text":"<p>Use the leftmost RJ45 connector, which is pinned as follows:</p> Pins Function 1, 8 RS485-B 2, 7 RS485-A 3, 6 GND"},{"location":"hardware/jkbms/models_pb/#wiring-options","title":"Wiring Options","text":"<p>Two wiring methods are supported. The <code>battery.rx</code> and <code>battery.tx</code> pins must be defined in the pin mapping for both methods. When using the <code>RS-485 Transceiver on MCU</code> interface type, <code>battery.rxen</code> and <code>battery.txen</code> pins must also be defined. See the device profile documentation for more details.</p>"},{"location":"hardware/jkbms/models_pb/#rs485-with-external-transceiver-and-uart-ttl","title":"RS485 with external Transceiver and UART-TTL","text":"<p>The wiring can be completed using an external RS485 to UART-TTL converter board. Search for <code>DEBO TTL-RS485</code> on reichelt.de for an example. For the UART receive pin on the ESP32 an input-only pin may be used.</p> <pre><code>           RS485           RS485-TTL\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        \u2502&lt;A---A&gt;\u2502        \u2502&lt;TX---RX&gt;\u2502       \u2502\n\u2502 JK-BMS \u2502&lt;B---B&gt;\u2502 RS485  \u2502&lt;RX---TX&gt;\u2502 ESP32 \u2502\n\u2502        \u2502&lt;-GND-&gt;\u2502 to 3V3 \u2502&lt;--GND--&gt;\u2502       \u2502\n\u2502        \u2502       \u2502        \u2502&lt;--3V3--&gt;\u2502       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Use the <code>TTL-UART on MCU</code> interface type in the OpenDTU-OnBattery settings for this setup. The ESP32 will talk UART to the converter board. The RS485 transceiver is transparent to the ESP32. That also means it has no explicit control over the transmitter or receiver. That in turn might cause the ESP32 to read its own data (only for bad converter boards).</p>"},{"location":"hardware/jkbms/models_pb/#rs485-with-transceiver","title":"RS485 with Transceiver","text":"<p>The wiring can be completed using only an RS485 transceiver chip that is connected to the ESP32 directly. This is the case for the OpenDTU Fusion board, where an ISL3178E transceiver is in use. There are also breakout-boards available that only have a RS485 transceiver (search for <code>MAX485 Module</code>).</p> <p>This setup requires four pins on the ESP32: Two for data (one input, one output), one that controls the receiver, and another that controls the transmitter. The latter two are outputs.</p> <pre><code>            RS485\n              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502        \u2502&lt;A--+--A&gt;\u2502A      RXEN\u2502&lt;-&gt;\u250215     \u2502 \u2502\n\u2502 JK-BMS \u2502&lt;B--+--B&gt;\u2502B        RX\u2502&lt;-&gt;\u250216 ESP \u2502 \u2502\n\u2502        \u2502    \u2502    \u2502       TXEN\u2502&lt;-&gt;\u250246  32 \u2502 \u2502\n\u2502        \u2502&lt;--&gt;\u2502GND \u2502ISL3178E EN\u2502&lt;-&gt;\u250245     \u2502 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n              \u2502       OpenDTU Fusion v2      \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Use the <code>RS485-Transceiver on MCU</code> interface type in the OpenDTU-OnBattery settings for this setup.</p>"}]}